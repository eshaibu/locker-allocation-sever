{
  "{\"filename\":\"/app/server/app.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "http",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "http"
              }
            ]
          },
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          },
          {
            "source": "morgan",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "logger"
              }
            ]
          },
          {
            "source": "body-parser",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "bodyParser"
              }
            ]
          },
          {
            "source": "./routes/routes",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "routes"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/app.js",
      "filenameRelative": "/app/server/app.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "app.js",
      "sourceFileName": "app.js",
      "sourceRoot": "/app/server",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "app"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _morgan = require('morgan');\n\nvar _morgan2 = _interopRequireDefault(_morgan);\n\nvar _bodyParser = require('body-parser');\n\nvar _bodyParser2 = _interopRequireDefault(_bodyParser);\n\nvar _routes = require('./routes/routes');\n\nvar _routes2 = _interopRequireDefault(_routes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Set up express app\nconst server = (0, _express2.default)();\nconst router = _express2.default.Router();\n\n// Port configuration\nconst port = parseInt(process.env.PORT, 10) || 8000;\n\n(0, _routes2.default)(router);\n\n// Log requests to the console\nserver.use((0, _morgan2.default)('dev'));\n\n// Parse incoming request data\nserver.use(_bodyParser2.default.json());\nserver.use(_bodyParser2.default.urlencoded({ extended: false }));\n\nserver.get('/', (req, res) => res.status(200).send({\n  message: 'Visit /api/v1/**'\n}));\n\n// API Routes\nserver.use('/api/v1', router);\n\n// Set up all default catch-all route that sends a message in JSON format\nserver.get('*', (req, res) => res.status(404).send({\n  message: 'That route does not exist'\n}));\n\n// Create server\nconst app = _http2.default.createServer(server);\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n\nexports.default = server;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJzZXJ2ZXIiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwicG9ydCIsInBhcnNlSW50IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImdldCIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiYXBwIiwiaHR0cCIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUVBO0FBQ0EsTUFBTUEsU0FBUyx3QkFBZjtBQUNBLE1BQU1DLFNBQVNDLGtCQUFRQyxNQUFSLEVBQWY7O0FBRUE7QUFDQSxNQUFNQyxPQUFPQyxTQUFTQyxRQUFRQyxHQUFSLENBQVlDLElBQXJCLEVBQTJCLEVBQTNCLEtBQWtDLElBQS9DOztBQUVBLHNCQUFPUCxNQUFQOztBQUVBO0FBQ0FELE9BQU9TLEdBQVAsQ0FBVyxzQkFBTyxLQUFQLENBQVg7O0FBRUE7QUFDQVQsT0FBT1MsR0FBUCxDQUFXQyxxQkFBV0MsSUFBWCxFQUFYO0FBQ0FYLE9BQU9TLEdBQVAsQ0FBV0MscUJBQVdFLFVBQVgsQ0FBc0IsRUFBRUMsVUFBVSxLQUFaLEVBQXRCLENBQVg7O0FBRUFiLE9BQU9jLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLENBQUNDLEdBQUQsRUFBTUMsR0FBTixLQUFjQSxJQUFJQyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDakRDLFdBQVM7QUFEd0MsQ0FBckIsQ0FBOUI7O0FBSUE7QUFDQW5CLE9BQU9TLEdBQVAsQ0FBVyxTQUFYLEVBQXNCUixNQUF0Qjs7QUFFQTtBQUNBRCxPQUFPYyxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBY0EsSUFBSUMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ2pEQyxXQUFTO0FBRHdDLENBQXJCLENBQTlCOztBQUlBO0FBQ0EsTUFBTUMsTUFBTUMsZUFBS0MsWUFBTCxDQUFrQnRCLE1BQWxCLENBQVo7O0FBRUFvQixJQUFJRyxNQUFKLENBQVduQixJQUFYLEVBQWlCLE1BQU07QUFDckJvQixVQUFRQyxHQUFSLENBQWEsMEJBQXlCckIsSUFBSyxFQUEzQztBQUNELENBRkQ7O2tCQUllSixNIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBodHRwIGZyb20gJ2h0dHAnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgbG9nZ2VyIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzL3JvdXRlcyc7XG5cbi8vIFNldCB1cCBleHByZXNzIGFwcFxuY29uc3Qgc2VydmVyID0gZXhwcmVzcygpO1xuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxuLy8gUG9ydCBjb25maWd1cmF0aW9uXG5jb25zdCBwb3J0ID0gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUE9SVCwgMTApIHx8IDgwMDA7XG5cbnJvdXRlcyhyb3V0ZXIpO1xuXG4vLyBMb2cgcmVxdWVzdHMgdG8gdGhlIGNvbnNvbGVcbnNlcnZlci51c2UobG9nZ2VyKCdkZXYnKSk7XG5cbi8vIFBhcnNlIGluY29taW5nIHJlcXVlc3QgZGF0YVxuc2VydmVyLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5zZXJ2ZXIudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSk7XG5cbnNlcnZlci5nZXQoJy8nLCAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoMjAwKS5zZW5kKHtcbiAgbWVzc2FnZTogJ1Zpc2l0IC9hcGkvdjEvKionXG59KSk7XG5cbi8vIEFQSSBSb3V0ZXNcbnNlcnZlci51c2UoJy9hcGkvdjEnLCByb3V0ZXIpO1xuXG4vLyBTZXQgdXAgYWxsIGRlZmF1bHQgY2F0Y2gtYWxsIHJvdXRlIHRoYXQgc2VuZHMgYSBtZXNzYWdlIGluIEpTT04gZm9ybWF0XG5zZXJ2ZXIuZ2V0KCcqJywgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuc2VuZCh7XG4gIG1lc3NhZ2U6ICdUaGF0IHJvdXRlIGRvZXMgbm90IGV4aXN0J1xufSkpO1xuXG4vLyBDcmVhdGUgc2VydmVyXG5jb25zdCBhcHAgPSBodHRwLmNyZWF0ZVNlcnZlcihzZXJ2ZXIpO1xuXG5hcHAubGlzdGVuKHBvcnQsICgpID0+IHtcbiAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHNlcnZlcjtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "server",
        "router",
        "express",
        "Router",
        "port",
        "parseInt",
        "process",
        "env",
        "PORT",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "get",
        "req",
        "res",
        "status",
        "send",
        "message",
        "app",
        "http",
        "createServer",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,MAAMA,SAAS,wBAAf;AACA,MAAMC,SAASC,kBAAQC,MAAR,EAAf;;AAEA;AACA,MAAMC,OAAOC,SAASC,QAAQC,GAAR,CAAYC,IAArB,EAA2B,EAA3B,KAAkC,IAA/C;;AAEA,sBAAOP,MAAP;;AAEA;AACAD,OAAOS,GAAP,CAAW,sBAAO,KAAP,CAAX;;AAEA;AACAT,OAAOS,GAAP,CAAWC,qBAAWC,IAAX,EAAX;AACAX,OAAOS,GAAP,CAAWC,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAX;;AAEAb,OAAOc,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjDC,WAAS;AADwC,CAArB,CAA9B;;AAIA;AACAnB,OAAOS,GAAP,CAAW,SAAX,EAAsBR,MAAtB;;AAEA;AACAD,OAAOc,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAcA,IAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjDC,WAAS;AADwC,CAArB,CAA9B;;AAIA;AACA,MAAMC,MAAMC,eAAKC,YAAL,CAAkBtB,MAAlB,CAAZ;;AAEAoB,IAAIG,MAAJ,CAAWnB,IAAX,EAAiB,MAAM;AACrBoB,UAAQC,GAAR,CAAa,0BAAyBrB,IAAK,EAA3C;AACD,CAFD;;kBAIeJ,M",
      "file": "app.js",
      "sourceRoot": "/app/server",
      "sourcesContent": [
        "import http from 'http';\nimport express from 'express';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\nimport routes from './routes/routes';\n\n// Set up express app\nconst server = express();\nconst router = express.Router();\n\n// Port configuration\nconst port = parseInt(process.env.PORT, 10) || 8000;\n\nroutes(router);\n\n// Log requests to the console\nserver.use(logger('dev'));\n\n// Parse incoming request data\nserver.use(bodyParser.json());\nserver.use(bodyParser.urlencoded({ extended: false }));\n\nserver.get('/', (req, res) => res.status(200).send({\n  message: 'Visit /api/v1/**'\n}));\n\n// API Routes\nserver.use('/api/v1', router);\n\n// Set up all default catch-all route that sends a message in JSON format\nserver.get('*', (req, res) => res.status(404).send({\n  message: 'That route does not exist'\n}));\n\n// Create server\nconst app = http.createServer(server);\n\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n\nexport default server;\n"
      ]
    },
    "mtime": 1525681999277
  },
  "{\"filename\":\"/app/server/routes/routes.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../web-api/CellController",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "cellController"
              }
            ]
          },
          {
            "source": "../web-api/AllocationController",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "allocationController"
              }
            ]
          },
          {
            "source": "../controllers/slack",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "slack"
              }
            ]
          },
          {
            "source": "../middleware/slackAuth",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "slackAuth"
              }
            ]
          },
          {
            "source": "../middleware/validateSubmission",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "validateSubmission"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/routes/routes.js",
      "filenameRelative": "/app/server/routes/routes.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "routes.js",
      "sourceFileName": "routes.js",
      "sourceRoot": "/app/server/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "routes"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _CellController = require('../web-api/CellController');\n\nvar _CellController2 = _interopRequireDefault(_CellController);\n\nvar _AllocationController = require('../web-api/AllocationController');\n\nvar _AllocationController2 = _interopRequireDefault(_AllocationController);\n\nvar _slack = require('../controllers/slack');\n\nvar _slack2 = _interopRequireDefault(_slack);\n\nvar _slackAuth = require('../middleware/slackAuth');\n\nvar _slackAuth2 = _interopRequireDefault(_slackAuth);\n\nvar _validateSubmission = require('../middleware/validateSubmission');\n\nvar _validateSubmission2 = _interopRequireDefault(_validateSubmission);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst routes = router => {\n  router.get('/', (req, res) => {\n    res.json({\n      status: 'Welcome to API'\n    });\n  });\n\n  router.route('/cells').post(_CellController2.default.create).get(_CellController2.default.list);\n\n  router.route('/cells/:id').get(_CellController2.default.retrieve).patch(_CellController2.default.update).delete(_CellController2.default.deleteCell);\n\n  router.route('/allocations').get(_AllocationController2.default.list).post(_AllocationController2.default.create);\n\n  router.route('/allocations/:id').patch(_AllocationController2.default.approveOrExpire);\n\n  router.get('/slack/authorise/:id', _slack2.default.authorise);\n  router.get('/slack/authenticate/', _slack2.default.saveToken);\n  router.post('/findKey', _slackAuth2.default, _slack2.default.findKey);\n  router.post('/selectKey', _validateSubmission2.default, _slackAuth2.default, _slack2.default.selectKey);\n};\n\nexports.default = routes;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXMiLCJyb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJqc29uIiwic3RhdHVzIiwicm91dGUiLCJwb3N0IiwiY2VsbENvbnRyb2xsZXIiLCJjcmVhdGUiLCJsaXN0IiwicmV0cmlldmUiLCJwYXRjaCIsInVwZGF0ZSIsImRlbGV0ZSIsImRlbGV0ZUNlbGwiLCJhbGxvY2F0aW9uQ29udHJvbGxlciIsImFwcHJvdmVPckV4cGlyZSIsInNsYWNrIiwiYXV0aG9yaXNlIiwic2F2ZVRva2VuIiwic2xhY2tBdXRoIiwiZmluZEtleSIsInZhbGlkYXRlU3VibWlzc2lvbiIsInNlbGVjdEtleSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUVBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsTUFBTUEsU0FBVUMsTUFBRCxJQUFZO0FBQ3pCQSxTQUFPQyxHQUFQLENBQVcsR0FBWCxFQUFnQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM1QkEsUUFBSUMsSUFBSixDQUFTO0FBQ1BDLGNBQVE7QUFERCxLQUFUO0FBR0QsR0FKRDs7QUFNQUwsU0FBT00sS0FBUCxDQUFhLFFBQWIsRUFDR0MsSUFESCxDQUNRQyx5QkFBZUMsTUFEdkIsRUFFR1IsR0FGSCxDQUVPTyx5QkFBZUUsSUFGdEI7O0FBSUFWLFNBQU9NLEtBQVAsQ0FBYSxZQUFiLEVBQ0dMLEdBREgsQ0FDT08seUJBQWVHLFFBRHRCLEVBRUdDLEtBRkgsQ0FFU0oseUJBQWVLLE1BRnhCLEVBR0dDLE1BSEgsQ0FHVU4seUJBQWVPLFVBSHpCOztBQUtBZixTQUFPTSxLQUFQLENBQWEsY0FBYixFQUNHTCxHQURILENBQ09lLCtCQUFxQk4sSUFENUIsRUFFR0gsSUFGSCxDQUVRUywrQkFBcUJQLE1BRjdCOztBQUlBVCxTQUFPTSxLQUFQLENBQWEsa0JBQWIsRUFDR00sS0FESCxDQUNTSSwrQkFBcUJDLGVBRDlCOztBQUdBakIsU0FBT0MsR0FBUCxDQUFXLHNCQUFYLEVBQW1DaUIsZ0JBQU1DLFNBQXpDO0FBQ0FuQixTQUFPQyxHQUFQLENBQVcsc0JBQVgsRUFBbUNpQixnQkFBTUUsU0FBekM7QUFDQXBCLFNBQU9PLElBQVAsQ0FBWSxVQUFaLEVBQXdCYyxtQkFBeEIsRUFBbUNILGdCQUFNSSxPQUF6QztBQUNBdEIsU0FBT08sSUFBUCxDQUFZLFlBQVosRUFBMEJnQiw0QkFBMUIsRUFBOENGLG1CQUE5QyxFQUF5REgsZ0JBQU1NLFNBQS9EO0FBQ0QsQ0EzQkQ7O2tCQTZCZXpCLE0iLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVyL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjZWxsQ29udHJvbGxlciBmcm9tICcuLi93ZWItYXBpL0NlbGxDb250cm9sbGVyJztcbmltcG9ydCBhbGxvY2F0aW9uQ29udHJvbGxlciBmcm9tICcuLi93ZWItYXBpL0FsbG9jYXRpb25Db250cm9sbGVyJztcblxuaW1wb3J0IHNsYWNrIGZyb20gJy4uL2NvbnRyb2xsZXJzL3NsYWNrJztcbmltcG9ydCBzbGFja0F1dGggZnJvbSAnLi4vbWlkZGxld2FyZS9zbGFja0F1dGgnO1xuaW1wb3J0IHZhbGlkYXRlU3VibWlzc2lvbiBmcm9tICcuLi9taWRkbGV3YXJlL3ZhbGlkYXRlU3VibWlzc2lvbic7XG5cbmNvbnN0IHJvdXRlcyA9IChyb3V0ZXIpID0+IHtcbiAgcm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHtcbiAgICAgIHN0YXR1czogJ1dlbGNvbWUgdG8gQVBJJ1xuICAgIH0pO1xuICB9KTtcblxuICByb3V0ZXIucm91dGUoJy9jZWxscycpXG4gICAgLnBvc3QoY2VsbENvbnRyb2xsZXIuY3JlYXRlKVxuICAgIC5nZXQoY2VsbENvbnRyb2xsZXIubGlzdCk7XG5cbiAgcm91dGVyLnJvdXRlKCcvY2VsbHMvOmlkJylcbiAgICAuZ2V0KGNlbGxDb250cm9sbGVyLnJldHJpZXZlKVxuICAgIC5wYXRjaChjZWxsQ29udHJvbGxlci51cGRhdGUpXG4gICAgLmRlbGV0ZShjZWxsQ29udHJvbGxlci5kZWxldGVDZWxsKTtcblxuICByb3V0ZXIucm91dGUoJy9hbGxvY2F0aW9ucycpXG4gICAgLmdldChhbGxvY2F0aW9uQ29udHJvbGxlci5saXN0KVxuICAgIC5wb3N0KGFsbG9jYXRpb25Db250cm9sbGVyLmNyZWF0ZSk7XG5cbiAgcm91dGVyLnJvdXRlKCcvYWxsb2NhdGlvbnMvOmlkJylcbiAgICAucGF0Y2goYWxsb2NhdGlvbkNvbnRyb2xsZXIuYXBwcm92ZU9yRXhwaXJlKTtcblxuICByb3V0ZXIuZ2V0KCcvc2xhY2svYXV0aG9yaXNlLzppZCcsIHNsYWNrLmF1dGhvcmlzZSk7XG4gIHJvdXRlci5nZXQoJy9zbGFjay9hdXRoZW50aWNhdGUvJywgc2xhY2suc2F2ZVRva2VuKTtcbiAgcm91dGVyLnBvc3QoJy9maW5kS2V5Jywgc2xhY2tBdXRoLCBzbGFjay5maW5kS2V5KTtcbiAgcm91dGVyLnBvc3QoJy9zZWxlY3RLZXknLCB2YWxpZGF0ZVN1Ym1pc3Npb24sIHNsYWNrQXV0aCwgc2xhY2suc2VsZWN0S2V5KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcztcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "routes.js"
      ],
      "names": [
        "routes",
        "router",
        "get",
        "req",
        "res",
        "json",
        "status",
        "route",
        "post",
        "cellController",
        "create",
        "list",
        "retrieve",
        "patch",
        "update",
        "delete",
        "deleteCell",
        "allocationController",
        "approveOrExpire",
        "slack",
        "authorise",
        "saveToken",
        "slackAuth",
        "findKey",
        "validateSubmission",
        "selectKey"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,SAAUC,MAAD,IAAY;AACzBA,SAAOC,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5BA,QAAIC,IAAJ,CAAS;AACPC,cAAQ;AADD,KAAT;AAGD,GAJD;;AAMAL,SAAOM,KAAP,CAAa,QAAb,EACGC,IADH,CACQC,yBAAeC,MADvB,EAEGR,GAFH,CAEOO,yBAAeE,IAFtB;;AAIAV,SAAOM,KAAP,CAAa,YAAb,EACGL,GADH,CACOO,yBAAeG,QADtB,EAEGC,KAFH,CAESJ,yBAAeK,MAFxB,EAGGC,MAHH,CAGUN,yBAAeO,UAHzB;;AAKAf,SAAOM,KAAP,CAAa,cAAb,EACGL,GADH,CACOe,+BAAqBN,IAD5B,EAEGH,IAFH,CAEQS,+BAAqBP,MAF7B;;AAIAT,SAAOM,KAAP,CAAa,kBAAb,EACGM,KADH,CACSI,+BAAqBC,eAD9B;;AAGAjB,SAAOC,GAAP,CAAW,sBAAX,EAAmCiB,gBAAMC,SAAzC;AACAnB,SAAOC,GAAP,CAAW,sBAAX,EAAmCiB,gBAAME,SAAzC;AACApB,SAAOO,IAAP,CAAY,UAAZ,EAAwBc,mBAAxB,EAAmCH,gBAAMI,OAAzC;AACAtB,SAAOO,IAAP,CAAY,YAAZ,EAA0BgB,4BAA1B,EAA8CF,mBAA9C,EAAyDH,gBAAMM,SAA/D;AACD,CA3BD;;kBA6BezB,M",
      "file": "routes.js",
      "sourceRoot": "/app/server/routes",
      "sourcesContent": [
        "import cellController from '../web-api/CellController';\nimport allocationController from '../web-api/AllocationController';\n\nimport slack from '../controllers/slack';\nimport slackAuth from '../middleware/slackAuth';\nimport validateSubmission from '../middleware/validateSubmission';\n\nconst routes = (router) => {\n  router.get('/', (req, res) => {\n    res.json({\n      status: 'Welcome to API'\n    });\n  });\n\n  router.route('/cells')\n    .post(cellController.create)\n    .get(cellController.list);\n\n  router.route('/cells/:id')\n    .get(cellController.retrieve)\n    .patch(cellController.update)\n    .delete(cellController.deleteCell);\n\n  router.route('/allocations')\n    .get(allocationController.list)\n    .post(allocationController.create);\n\n  router.route('/allocations/:id')\n    .patch(allocationController.approveOrExpire);\n\n  router.get('/slack/authorise/:id', slack.authorise);\n  router.get('/slack/authenticate/', slack.saveToken);\n  router.post('/findKey', slackAuth, slack.findKey);\n  router.post('/selectKey', validateSubmission, slackAuth, slack.selectKey);\n};\n\nexport default routes;\n"
      ]
    },
    "mtime": 1525872456466
  },
  "{\"filename\":\"/app/server/web-api/CellController.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/web-api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "extends",
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "validatorjs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Validator"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          },
          {
            "source": "../models/",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/web-api/CellController.js",
      "filenameRelative": "/app/server/web-api/CellController.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "CellController.js",
      "sourceFileName": "CellController.js",
      "sourceRoot": "/app/server/web-api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/web-api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "CellController"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _validatorjs = require('validatorjs');\n\nvar _validatorjs2 = _interopRequireDefault(_validatorjs);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nvar _models = require('../models/');\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Op = _sequelize2.default.Op;\nconst cellModel = _models2.default.Cell;\nconst allocationModel = _models2.default.Allocation;\n\nconst cellController = {\n  async create(req, res) {\n    try {\n      const { name, numberOfLockers } = req.body;\n      const validator = new _validatorjs2.default(req.body, cellModel.createRules());\n      if (validator.passes()) {\n        const nameExist = await cellModel.findOne({ where: { name } });\n        if (!nameExist) {\n          const cell = await cellModel.create({ name, numberOfLockers });\n          return res.status(201).json({ message: 'Cell creation successful', data: cell });\n        }\n        return res.status(409).json({ message: 'Name already exist' });\n      }\n      return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async retrieve(req, res) {\n    try {\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        const lockerNoArray = Array.from({ length: cellExist.numberOfLockers }, (v, k) => k + 1);\n        const lockerOccupiedInCell = await allocationModel.findAll({\n          where: {\n            cellId: req.params.id,\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            expired: null\n          }\n        });\n        const unavailableLockers = lockerOccupiedInCell.map(allocation => allocation.lockerNumber);\n        const availableLockers = lockerNoArray.filter(lockerNumber => !unavailableLockers.includes(lockerNumber));\n        const cell = _extends({}, cellExist.dataValues, { unavailableLockers, availableLockers });\n        return res.status(200).json({ message: 'Cell retrieved', data: cell });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async list(req, res) {\n    try {\n      const cells = await cellModel.findAndCountAll();\n      return res.status(200).json({ message: 'List of cells', data: cells });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async update(req, res) {\n    try {\n      const { name, numberOfLockers } = req.body;\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        const validator = new _validatorjs2.default(req.body, cellModel.createRules());\n        if (validator.passes()) {\n          const nameExist = await cellModel.findOne({ where: { name, id: { [Op.ne]: req.params.id } } });\n          if (!nameExist) {\n            // check when locker reduced, ensure you remove all allocations to those lockers not in\n            // current capacity (rare case)\n            if (numberOfLockers < cellExist.numberOfLockers) {\n              await allocationModel.destroy({\n                where: {\n                  cellId: req.params.id,\n                  lockerNumber: {\n                    [Op.gt]: numberOfLockers\n                  }\n                }\n              });\n            }\n            const cell = await cellExist.update({ name, numberOfLockers });\n            return res.status(201).json({ message: 'Cell updated successfully', data: cell });\n          }\n          return res.status(409).json({ message: 'Name already exist' });\n        }\n        return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async deleteCell(req, res) {\n    try {\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        await cellExist.destroy();\n        return res.status(200).json({ message: 'Deleted successfully' });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  }\n};\n\nexports.default = cellController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "CellController.js"
      ],
      "names": [
        "Op",
        "Sequelize",
        "cellModel",
        "db",
        "Cell",
        "allocationModel",
        "Allocation",
        "cellController",
        "create",
        "req",
        "res",
        "name",
        "numberOfLockers",
        "body",
        "validator",
        "Validator",
        "createRules",
        "passes",
        "nameExist",
        "findOne",
        "where",
        "cell",
        "status",
        "json",
        "message",
        "data",
        "errors",
        "all",
        "retrieve",
        "cellExist",
        "findById",
        "params",
        "id",
        "lockerNoArray",
        "Array",
        "from",
        "length",
        "v",
        "k",
        "lockerOccupiedInCell",
        "findAll",
        "cellId",
        "requestStatus",
        "ne",
        "expired",
        "unavailableLockers",
        "map",
        "allocation",
        "lockerNumber",
        "availableLockers",
        "filter",
        "includes",
        "dataValues",
        "list",
        "cells",
        "findAndCountAll",
        "update",
        "destroy",
        "gt",
        "deleteCell"
      ],
      "mappings": "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",
      "file": "CellController.js",
      "sourceRoot": "/app/server/web-api",
      "sourcesContent": [
        "import Validator from 'validatorjs';\nimport Sequelize from 'sequelize';\nimport db from '../models/';\n\nconst Op = Sequelize.Op;\nconst cellModel = db.Cell;\nconst allocationModel = db.Allocation;\n\nconst cellController = {\n  async create(req, res) {\n    try {\n      const { name, numberOfLockers } = req.body;\n      const validator = new Validator(req.body, cellModel.createRules());\n      if (validator.passes()) {\n        const nameExist = await cellModel.findOne({ where: { name } });\n        if (!nameExist) {\n          const cell = await cellModel.create({ name, numberOfLockers });\n          return res.status(201).json({ message: 'Cell creation successful', data: cell });\n        }\n        return res.status(409).json({ message: 'Name already exist' });\n      }\n      return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async retrieve(req, res) {\n    try {\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        const lockerNoArray = Array.from({ length: cellExist.numberOfLockers }, (v, k) => k + 1);\n        const lockerOccupiedInCell = await allocationModel.findAll({\n          where: {\n            cellId: req.params.id,\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            expired: null,\n          }\n        });\n        const unavailableLockers = lockerOccupiedInCell.map(allocation => allocation.lockerNumber);\n        const availableLockers = lockerNoArray.filter(lockerNumber => !unavailableLockers.includes(lockerNumber));\n        const cell = { ...cellExist.dataValues, unavailableLockers, availableLockers };\n        return res.status(200).json({ message: 'Cell retrieved', data: cell });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async list(req, res) {\n    try {\n      const cells = await cellModel.findAndCountAll();\n      return res.status(200).json({ message: 'List of cells', data: cells });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async update(req, res) {\n    try {\n      const { name, numberOfLockers } = req.body;\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        const validator = new Validator(req.body, cellModel.createRules());\n        if (validator.passes()) {\n          const nameExist = await cellModel.findOne({ where: { name, id: { [Op.ne]: req.params.id } } });\n          if (!nameExist) {\n            // check when locker reduced, ensure you remove all allocations to those lockers not in\n            // current capacity (rare case)\n            if (numberOfLockers < cellExist.numberOfLockers) {\n              await allocationModel.destroy({\n                where: {\n                  cellId: req.params.id,\n                  lockerNumber: {\n                    [Op.gt]: numberOfLockers\n                  }\n                }\n              });\n            }\n            const cell = await cellExist.update({ name, numberOfLockers });\n            return res.status(201).json({ message: 'Cell updated successfully', data: cell });\n          }\n          return res.status(409).json({ message: 'Name already exist' });\n        }\n        return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async deleteCell(req, res) {\n    try {\n      const cellExist = await cellModel.findById(req.params.id);\n      if (cellExist) {\n        await cellExist.destroy();\n        return res.status(200).json({ message: 'Deleted successfully' });\n      }\n      return res.status(404).json({ message: 'Cell does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  }\n};\n\nexport default cellController;\n"
      ]
    },
    "mtime": 1525555034000
  },
  "{\"filename\":\"/app/server/models/index.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/models/index.js",
      "filenameRelative": "/app/server/models/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/server/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst config = require('../db/config/config');\n\nconst basename = path.basename(module.filename);\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js').forEach(file => {\n  const model = sequelize.import(path.join(__dirname, file));\n  db[model.name] = model;\n});\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexports.default = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJjb25maWciLCJiYXNlbmFtZSIsIm1vZHVsZSIsImZpbGVuYW1lIiwiZGIiLCJzZXF1ZWxpemUiLCJ1c2VfZW52X3ZhcmlhYmxlIiwicHJvY2VzcyIsImVudiIsImRhdGFiYXNlIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInJlYWRkaXJTeW5jIiwiX19kaXJuYW1lIiwiZmlsdGVyIiwiZmlsZSIsImluZGV4T2YiLCJzbGljZSIsImZvckVhY2giLCJtb2RlbCIsImltcG9ydCIsImpvaW4iLCJuYW1lIiwiT2JqZWN0Iiwia2V5cyIsIm1vZGVsTmFtZSIsImFzc29jaWF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxLQUFLQyxRQUFRLElBQVIsQ0FBWDtBQUNBLE1BQU1DLE9BQU9ELFFBQVEsTUFBUixDQUFiO0FBQ0EsTUFBTUUsWUFBWUYsUUFBUSxXQUFSLENBQWxCO0FBQ0EsTUFBTUcsU0FBU0gsUUFBUSxxQkFBUixDQUFmOztBQUVBLE1BQU1JLFdBQVdILEtBQUtHLFFBQUwsQ0FBY0MsT0FBT0MsUUFBckIsQ0FBakI7O0FBRUEsTUFBTUMsS0FBSyxFQUFYOztBQUVBLElBQUlDLFNBQUo7QUFDQSxJQUFJTCxPQUFPTSxnQkFBWCxFQUE2QjtBQUMzQkQsY0FBWSxJQUFJTixTQUFKLENBQWNRLFFBQVFDLEdBQVIsQ0FBWVIsT0FBT00sZ0JBQW5CLENBQWQsQ0FBWjtBQUNELENBRkQsTUFFTztBQUNMRCxjQUFZLElBQUlOLFNBQUosQ0FDVkMsT0FBT1MsUUFERyxFQUNPVCxPQUFPVSxRQURkLEVBQ3dCVixPQUFPVyxRQUQvQixFQUN5Q1gsTUFEekMsQ0FBWjtBQUdEOztBQUVESixHQUNHZ0IsV0FESCxDQUNlQyxTQURmLEVBRUdDLE1BRkgsQ0FFVUMsUUFDTEEsS0FBS0MsT0FBTCxDQUFhLEdBQWIsTUFBc0IsQ0FBdkIsSUFDQ0QsU0FBU2QsUUFEVixJQUVDYyxLQUFLRSxLQUFMLENBQVcsQ0FBQyxDQUFaLE1BQW1CLEtBTHhCLEVBTUdDLE9BTkgsQ0FNWUgsSUFBRCxJQUFVO0FBQ2pCLFFBQU1JLFFBQVFkLFVBQVVlLE1BQVYsQ0FBaUJ0QixLQUFLdUIsSUFBTCxDQUFVUixTQUFWLEVBQXFCRSxJQUFyQixDQUFqQixDQUFkO0FBQ0FYLEtBQUdlLE1BQU1HLElBQVQsSUFBaUJILEtBQWpCO0FBQ0QsQ0FUSDs7QUFXQUksT0FBT0MsSUFBUCxDQUFZcEIsRUFBWixFQUFnQmMsT0FBaEIsQ0FBeUJPLFNBQUQsSUFBZTtBQUNyQyxNQUFJckIsR0FBR3FCLFNBQUgsRUFBY0MsU0FBbEIsRUFBNkI7QUFDM0J0QixPQUFHcUIsU0FBSCxFQUFjQyxTQUFkLENBQXdCdEIsRUFBeEI7QUFDRDtBQUNGLENBSkQ7O0FBTUFBLEdBQUdDLFNBQUgsR0FBZUEsU0FBZjtBQUNBRCxHQUFHTCxTQUFILEdBQWVBLFNBQWY7O2tCQUVlSyxFIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVyL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoJy4uL2RiL2NvbmZpZy9jb25maWcnKTtcblxuY29uc3QgYmFzZW5hbWUgPSBwYXRoLmJhc2VuYW1lKG1vZHVsZS5maWxlbmFtZSk7XG5cbmNvbnN0IGRiID0ge307XG5cbmxldCBzZXF1ZWxpemU7XG5pZiAoY29uZmlnLnVzZV9lbnZfdmFyaWFibGUpIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShwcm9jZXNzLmVudltjb25maWcudXNlX2Vudl92YXJpYWJsZV0pO1xufSBlbHNlIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcbiAgICBjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWdcbiAgKTtcbn1cblxuZnNcbiAgLnJlYWRkaXJTeW5jKF9fZGlybmFtZSlcbiAgLmZpbHRlcihmaWxlID0+XG4gICAgKGZpbGUuaW5kZXhPZignLicpICE9PSAwKSAmJlxuICAgIChmaWxlICE9PSBiYXNlbmFtZSkgJiZcbiAgICAoZmlsZS5zbGljZSgtMykgPT09ICcuanMnKSlcbiAgLmZvckVhY2goKGZpbGUpID0+IHtcbiAgICBjb25zdCBtb2RlbCA9IHNlcXVlbGl6ZS5pbXBvcnQocGF0aC5qb2luKF9fZGlybmFtZSwgZmlsZSkpO1xuICAgIGRiW21vZGVsLm5hbWVdID0gbW9kZWw7XG4gIH0pO1xuXG5PYmplY3Qua2V5cyhkYikuZm9yRWFjaCgobW9kZWxOYW1lKSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxuZXhwb3J0IGRlZmF1bHQgZGI7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "config",
        "basename",
        "module",
        "filename",
        "db",
        "sequelize",
        "use_env_variable",
        "process",
        "env",
        "database",
        "username",
        "password",
        "readdirSync",
        "__dirname",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "import",
        "join",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate"
      ],
      "mappings": ";;;;;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,YAAYF,QAAQ,WAAR,CAAlB;AACA,MAAMG,SAASH,QAAQ,qBAAR,CAAf;;AAEA,MAAMI,WAAWH,KAAKG,QAAL,CAAcC,OAAOC,QAArB,CAAjB;;AAEA,MAAMC,KAAK,EAAX;;AAEA,IAAIC,SAAJ;AACA,IAAIL,OAAOM,gBAAX,EAA6B;AAC3BD,cAAY,IAAIN,SAAJ,CAAcQ,QAAQC,GAAR,CAAYR,OAAOM,gBAAnB,CAAd,CAAZ;AACD,CAFD,MAEO;AACLD,cAAY,IAAIN,SAAJ,CACVC,OAAOS,QADG,EACOT,OAAOU,QADd,EACwBV,OAAOW,QAD/B,EACyCX,MADzC,CAAZ;AAGD;;AAEDJ,GACGgB,WADH,CACeC,SADf,EAEGC,MAFH,CAEUC,QACLA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IACCD,SAASd,QADV,IAECc,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KALxB,EAMGC,OANH,CAMYH,IAAD,IAAU;AACjB,QAAMI,QAAQd,UAAUe,MAAV,CAAiBtB,KAAKuB,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAX,KAAGe,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CATH;;AAWAI,OAAOC,IAAP,CAAYpB,EAAZ,EAAgBc,OAAhB,CAAyBO,SAAD,IAAe;AACrC,MAAIrB,GAAGqB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BtB,OAAGqB,SAAH,EAAcC,SAAd,CAAwBtB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGL,SAAH,GAAeA,SAAf;;kBAEeK,E",
      "file": "index.js",
      "sourceRoot": "/app/server/models",
      "sourcesContent": [
        "const fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst config = require('../db/config/config');\n\nconst basename = path.basename(module.filename);\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  sequelize = new Sequelize(\n    config.database, config.username, config.password, config\n  );\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file =>\n    (file.indexOf('.') !== 0) &&\n    (file !== basename) &&\n    (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n"
      ]
    },
    "mtime": 1525858320907
  },
  "{\"filename\":\"/app/server/db/config/config.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/db/config\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/db/config/config.js",
      "filenameRelative": "/app/server/db/config/config.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "config.js",
      "sourceFileName": "config.js",
      "sourceRoot": "/app/server/db/config",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/db/config",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "config"
    },
    "ignored": false,
    "code": "'use strict';\n\nconst dotenv = require('dotenv');\n\ndotenv.config();\n\nconst config = {\n  development: {\n    username: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    host: 'pellefant.db.elephantsql.com',\n    port: 5432,\n    dialect: 'postgres',\n    operatorsAliases: false\n  },\n  production: {\n    use_env_variable: 'DATABASE_URL',\n    dialect: 'postgres'\n  }\n};\n\nmodule.exports = config[process.env.NODE_ENV || 'development'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJyZXF1aXJlIiwiY29uZmlnIiwiZGV2ZWxvcG1lbnQiLCJ1c2VybmFtZSIsInByb2Nlc3MiLCJlbnYiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiREJfTkFNRSIsImhvc3QiLCJwb3J0IiwiZGlhbGVjdCIsIm9wZXJhdG9yc0FsaWFzZXMiLCJwcm9kdWN0aW9uIiwidXNlX2Vudl92YXJpYWJsZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJOT0RFX0VOViJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxTQUFTQyxRQUFRLFFBQVIsQ0FBZjs7QUFFQUQsT0FBT0UsTUFBUDs7QUFFQSxNQUFNQSxTQUFTO0FBQ2JDLGVBQWE7QUFDWEMsY0FBVUMsUUFBUUMsR0FBUixDQUFZQyxPQURYO0FBRVhDLGNBQVVILFFBQVFDLEdBQVIsQ0FBWUcsV0FGWDtBQUdYQyxjQUFVTCxRQUFRQyxHQUFSLENBQVlLLE9BSFg7QUFJWEMsVUFBTSw4QkFKSztBQUtYQyxVQUFNLElBTEs7QUFNWEMsYUFBUyxVQU5FO0FBT1hDLHNCQUFrQjtBQVBQLEdBREE7QUFVYkMsY0FBWTtBQUNWQyxzQkFBa0IsY0FEUjtBQUVWSCxhQUFTO0FBRkM7QUFWQyxDQUFmOztBQWdCQUksT0FBT0MsT0FBUCxHQUFpQmpCLE9BQU9HLFFBQVFDLEdBQVIsQ0FBWWMsUUFBWixJQUF3QixhQUEvQixDQUFqQiIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXIvZGIvY29uZmlnIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZG90ZW52ID0gcmVxdWlyZSgnZG90ZW52Jyk7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3QgY29uZmlnID0ge1xuICBkZXZlbG9wbWVudDoge1xuICAgIHVzZXJuYW1lOiBwcm9jZXNzLmVudi5EQl9VU0VSLFxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSxcbiAgICBob3N0OiAncGVsbGVmYW50LmRiLmVsZXBoYW50c3FsLmNvbScsXG4gICAgcG9ydDogNTQzMixcbiAgICBkaWFsZWN0OiAncG9zdGdyZXMnLFxuICAgIG9wZXJhdG9yc0FsaWFzZXM6IGZhbHNlXG4gIH0sXG4gIHByb2R1Y3Rpb246IHtcbiAgICB1c2VfZW52X3ZhcmlhYmxlOiAnREFUQUJBU0VfVVJMJyxcbiAgICBkaWFsZWN0OiAncG9zdGdyZXMnXG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY29uZmlnW3Byb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCddOyJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "dotenv",
        "require",
        "config",
        "development",
        "username",
        "process",
        "env",
        "DB_USER",
        "password",
        "DB_PASSWORD",
        "database",
        "DB_NAME",
        "host",
        "port",
        "dialect",
        "operatorsAliases",
        "production",
        "use_env_variable",
        "module",
        "exports",
        "NODE_ENV"
      ],
      "mappings": ";;AAAA,MAAMA,SAASC,QAAQ,QAAR,CAAf;;AAEAD,OAAOE,MAAP;;AAEA,MAAMA,SAAS;AACbC,eAAa;AACXC,cAAUC,QAAQC,GAAR,CAAYC,OADX;AAEXC,cAAUH,QAAQC,GAAR,CAAYG,WAFX;AAGXC,cAAUL,QAAQC,GAAR,CAAYK,OAHX;AAIXC,UAAM,8BAJK;AAKXC,UAAM,IALK;AAMXC,aAAS,UANE;AAOXC,sBAAkB;AAPP,GADA;AAUbC,cAAY;AACVC,sBAAkB,cADR;AAEVH,aAAS;AAFC;AAVC,CAAf;;AAgBAI,OAAOC,OAAP,GAAiBjB,OAAOG,QAAQC,GAAR,CAAYc,QAAZ,IAAwB,aAA/B,CAAjB",
      "file": "config.js",
      "sourceRoot": "/app/server/db/config",
      "sourcesContent": [
        "const dotenv = require('dotenv');\n\ndotenv.config();\n\nconst config = {\n  development: {\n    username: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME,\n    host: 'pellefant.db.elephantsql.com',\n    port: 5432,\n    dialect: 'postgres',\n    operatorsAliases: false\n  },\n  production: {\n    use_env_variable: 'DATABASE_URL',\n    dialect: 'postgres'\n  }\n};\n\nmodule.exports = config[process.env.NODE_ENV || 'development'];"
      ]
    },
    "mtime": 1525686493899
  },
  "{\"filename\":\"/app/server/models/allocation.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/models/allocation.js",
      "filenameRelative": "/app/server/models/allocation.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "allocation.js",
      "sourceFileName": "allocation.js",
      "sourceRoot": "/app/server/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "allocation"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst allocationModel = (sequelize, DataTypes) => {\n  const Allocation = sequelize.define('Allocation', {\n    requestBy: {\n      type: DataTypes.STRING,\n      allowNull: true\n    },\n    lockerNumber: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    requestStatus: {\n      type: DataTypes.ENUM,\n      values: ['request', 'approved', 'rejected'],\n      allowNull: false\n    },\n    expired: {\n      type: DataTypes.DATE,\n      allowNull: true\n    }\n  });\n  Allocation.associate = models => {\n    // associations can be defined here\n    Allocation.belongsTo(models.Cell, {\n      foreignKey: 'cellId',\n      onDelete: 'CASCADE'\n    });\n\n    Allocation.hasOne(models.User, {\n      foreignKey: 'allocationId',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  Allocation.createRules = () => ({\n    cellId: 'required',\n    requestBy: 'required|email',\n    lockerNumber: 'required|integer',\n    requestStatus: 'required|in:request,approved,rejected'\n  });\n\n  return Allocation;\n};\n\nexports.default = allocationModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsbG9jYXRpb24uanMiXSwibmFtZXMiOlsiYWxsb2NhdGlvbk1vZGVsIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQWxsb2NhdGlvbiIsImRlZmluZSIsInJlcXVlc3RCeSIsInR5cGUiLCJTVFJJTkciLCJhbGxvd051bGwiLCJsb2NrZXJOdW1iZXIiLCJJTlRFR0VSIiwicmVxdWVzdFN0YXR1cyIsIkVOVU0iLCJ2YWx1ZXMiLCJleHBpcmVkIiwiREFURSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsIkNlbGwiLCJmb3JlaWduS2V5Iiwib25EZWxldGUiLCJoYXNPbmUiLCJVc2VyIiwiY3JlYXRlUnVsZXMiLCJjZWxsSWQiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsa0JBQWtCLENBQUNDLFNBQUQsRUFBWUMsU0FBWixLQUEwQjtBQUNoRCxRQUFNQyxhQUFhRixVQUFVRyxNQUFWLENBQWlCLFlBQWpCLEVBQStCO0FBQ2hEQyxlQUFXO0FBQ1RDLFlBQU1KLFVBQVVLLE1BRFA7QUFFVEMsaUJBQVc7QUFGRixLQURxQztBQUtoREMsa0JBQWM7QUFDWkgsWUFBTUosVUFBVVEsT0FESjtBQUVaRixpQkFBVztBQUZDLEtBTGtDO0FBU2hERyxtQkFBZTtBQUNiTCxZQUFNSixVQUFVVSxJQURIO0FBRWJDLGNBQVEsQ0FBQyxTQUFELEVBQVksVUFBWixFQUF3QixVQUF4QixDQUZLO0FBR2JMLGlCQUFXO0FBSEUsS0FUaUM7QUFjaERNLGFBQVM7QUFDUFIsWUFBTUosVUFBVWEsSUFEVDtBQUVQUCxpQkFBVztBQUZKO0FBZHVDLEdBQS9CLENBQW5CO0FBbUJBTCxhQUFXYSxTQUFYLEdBQXdCQyxNQUFELElBQVk7QUFDakM7QUFDQWQsZUFBV2UsU0FBWCxDQUFxQkQsT0FBT0UsSUFBNUIsRUFBa0M7QUFDaENDLGtCQUFZLFFBRG9CO0FBRWhDQyxnQkFBVTtBQUZzQixLQUFsQzs7QUFLQWxCLGVBQVdtQixNQUFYLENBQWtCTCxPQUFPTSxJQUF6QixFQUErQjtBQUM3Qkgsa0JBQVksY0FEaUI7QUFFN0JDLGdCQUFVO0FBRm1CLEtBQS9CO0FBSUQsR0FYRDs7QUFhQWxCLGFBQVdxQixXQUFYLEdBQXlCLE9BQU87QUFDOUJDLFlBQVEsVUFEc0I7QUFFOUJwQixlQUFXLGdCQUZtQjtBQUc5Qkksa0JBQWMsa0JBSGdCO0FBSTlCRSxtQkFBZTtBQUplLEdBQVAsQ0FBekI7O0FBT0EsU0FBT1IsVUFBUDtBQUNELENBekNEOztrQkEyQ2VILGUiLCJmaWxlIjoiYWxsb2NhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlci9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhbGxvY2F0aW9uTW9kZWwgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgQWxsb2NhdGlvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0FsbG9jYXRpb24nLCB7XG4gICAgcmVxdWVzdEJ5OiB7XG4gICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgICAgYWxsb3dOdWxsOiB0cnVlXG4gICAgfSxcbiAgICBsb2NrZXJOdW1iZXI6IHtcbiAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgcmVxdWVzdFN0YXR1czoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkVOVU0sXG4gICAgICB2YWx1ZXM6IFsncmVxdWVzdCcsICdhcHByb3ZlZCcsICdyZWplY3RlZCddLFxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxuICAgIH0sXG4gICAgZXhwaXJlZDoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgICBhbGxvd051bGw6IHRydWVcbiAgICB9LFxuICB9KTtcbiAgQWxsb2NhdGlvbi5hc3NvY2lhdGUgPSAobW9kZWxzKSA9PiB7XG4gICAgLy8gYXNzb2NpYXRpb25zIGNhbiBiZSBkZWZpbmVkIGhlcmVcbiAgICBBbGxvY2F0aW9uLmJlbG9uZ3NUbyhtb2RlbHMuQ2VsbCwge1xuICAgICAgZm9yZWlnbktleTogJ2NlbGxJZCcsXG4gICAgICBvbkRlbGV0ZTogJ0NBU0NBREUnXG4gICAgfSk7XG4gICAgXG4gICAgQWxsb2NhdGlvbi5oYXNPbmUobW9kZWxzLlVzZXIsIHtcbiAgICAgIGZvcmVpZ25LZXk6ICdhbGxvY2F0aW9uSWQnLFxuICAgICAgb25EZWxldGU6ICdDQVNDQURFJ1xuICAgIH0pO1xuICB9O1xuXG4gIEFsbG9jYXRpb24uY3JlYXRlUnVsZXMgPSAoKSA9PiAoe1xuICAgIGNlbGxJZDogJ3JlcXVpcmVkJyxcbiAgICByZXF1ZXN0Qnk6ICdyZXF1aXJlZHxlbWFpbCcsXG4gICAgbG9ja2VyTnVtYmVyOiAncmVxdWlyZWR8aW50ZWdlcicsXG4gICAgcmVxdWVzdFN0YXR1czogJ3JlcXVpcmVkfGluOnJlcXVlc3QsYXBwcm92ZWQscmVqZWN0ZWQnLFxuICB9KTtcblxuICByZXR1cm4gQWxsb2NhdGlvbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGFsbG9jYXRpb25Nb2RlbDtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "allocation.js"
      ],
      "names": [
        "allocationModel",
        "sequelize",
        "DataTypes",
        "Allocation",
        "define",
        "requestBy",
        "type",
        "STRING",
        "allowNull",
        "lockerNumber",
        "INTEGER",
        "requestStatus",
        "ENUM",
        "values",
        "expired",
        "DATE",
        "associate",
        "models",
        "belongsTo",
        "Cell",
        "foreignKey",
        "onDelete",
        "hasOne",
        "User",
        "createRules",
        "cellId"
      ],
      "mappings": ";;;;;AAAA,MAAMA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAChD,QAAMC,aAAaF,UAAUG,MAAV,CAAiB,YAAjB,EAA+B;AAChDC,eAAW;AACTC,YAAMJ,UAAUK,MADP;AAETC,iBAAW;AAFF,KADqC;AAKhDC,kBAAc;AACZH,YAAMJ,UAAUQ,OADJ;AAEZF,iBAAW;AAFC,KALkC;AAShDG,mBAAe;AACbL,YAAMJ,UAAUU,IADH;AAEbC,cAAQ,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,CAFK;AAGbL,iBAAW;AAHE,KATiC;AAchDM,aAAS;AACPR,YAAMJ,UAAUa,IADT;AAEPP,iBAAW;AAFJ;AAduC,GAA/B,CAAnB;AAmBAL,aAAWa,SAAX,GAAwBC,MAAD,IAAY;AACjC;AACAd,eAAWe,SAAX,CAAqBD,OAAOE,IAA5B,EAAkC;AAChCC,kBAAY,QADoB;AAEhCC,gBAAU;AAFsB,KAAlC;;AAKAlB,eAAWmB,MAAX,CAAkBL,OAAOM,IAAzB,EAA+B;AAC7BH,kBAAY,cADiB;AAE7BC,gBAAU;AAFmB,KAA/B;AAID,GAXD;;AAaAlB,aAAWqB,WAAX,GAAyB,OAAO;AAC9BC,YAAQ,UADsB;AAE9BpB,eAAW,gBAFmB;AAG9BI,kBAAc,kBAHgB;AAI9BE,mBAAe;AAJe,GAAP,CAAzB;;AAOA,SAAOR,UAAP;AACD,CAzCD;;kBA2CeH,e",
      "file": "allocation.js",
      "sourceRoot": "/app/server/models",
      "sourcesContent": [
        "const allocationModel = (sequelize, DataTypes) => {\n  const Allocation = sequelize.define('Allocation', {\n    requestBy: {\n      type: DataTypes.STRING,\n      allowNull: true\n    },\n    lockerNumber: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    requestStatus: {\n      type: DataTypes.ENUM,\n      values: ['request', 'approved', 'rejected'],\n      allowNull: false\n    },\n    expired: {\n      type: DataTypes.DATE,\n      allowNull: true\n    },\n  });\n  Allocation.associate = (models) => {\n    // associations can be defined here\n    Allocation.belongsTo(models.Cell, {\n      foreignKey: 'cellId',\n      onDelete: 'CASCADE'\n    });\n    \n    Allocation.hasOne(models.User, {\n      foreignKey: 'allocationId',\n      onDelete: 'CASCADE'\n    });\n  };\n\n  Allocation.createRules = () => ({\n    cellId: 'required',\n    requestBy: 'required|email',\n    lockerNumber: 'required|integer',\n    requestStatus: 'required|in:request,approved,rejected',\n  });\n\n  return Allocation;\n};\n\nexport default allocationModel;\n"
      ]
    },
    "mtime": 1525974684384
  },
  "{\"filename\":\"/app/server/models/cell.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/models/cell.js",
      "filenameRelative": "/app/server/models/cell.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "cell.js",
      "sourceFileName": "cell.js",
      "sourceRoot": "/app/server/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "cell"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst cellModel = (sequelize, DataTypes) => {\n  const Cell = sequelize.define('Cell', {\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    numberOfLockers: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    }\n  }, {\n    paranoid: true\n  });\n  Cell.associate = models => {\n    // associations can be defined here\n    Cell.hasMany(models.Allocation, {\n      foreignKey: 'cellId',\n      as: 'allocations'\n    });\n    Cell.hasMany(models.User, {\n      foreignKey: 'cellId',\n      as: 'users'\n    });\n  };\n  Cell.createRules = () => ({\n    name: 'required',\n    numberOfLockers: 'required|integer'\n  });\n  return Cell;\n};\n\nexports.default = cellModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNlbGwuanMiXSwibmFtZXMiOlsiY2VsbE1vZGVsIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQ2VsbCIsImRlZmluZSIsIm5hbWUiLCJ0eXBlIiwiU1RSSU5HIiwiYWxsb3dOdWxsIiwibnVtYmVyT2ZMb2NrZXJzIiwiSU5URUdFUiIsInBhcmFub2lkIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIkFsbG9jYXRpb24iLCJmb3JlaWduS2V5IiwiYXMiLCJVc2VyIiwiY3JlYXRlUnVsZXMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsWUFBWSxDQUFDQyxTQUFELEVBQVlDLFNBQVosS0FBMEI7QUFDMUMsUUFBTUMsT0FBT0YsVUFBVUcsTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsVUFBTTtBQUNKQyxZQUFNSixVQUFVSyxNQURaO0FBRUpDLGlCQUFXO0FBRlAsS0FEOEI7QUFLcENDLHFCQUFpQjtBQUNmSCxZQUFNSixVQUFVUSxPQUREO0FBRWZGLGlCQUFXO0FBRkk7QUFMbUIsR0FBekIsRUFTVjtBQUNERyxjQUFVO0FBRFQsR0FUVSxDQUFiO0FBWUFSLE9BQUtTLFNBQUwsR0FBa0JDLE1BQUQsSUFBWTtBQUMzQjtBQUNBVixTQUFLVyxPQUFMLENBQWFELE9BQU9FLFVBQXBCLEVBQWdDO0FBQzlCQyxrQkFBWSxRQURrQjtBQUU5QkMsVUFBSTtBQUYwQixLQUFoQztBQUlBZCxTQUFLVyxPQUFMLENBQWFELE9BQU9LLElBQXBCLEVBQTBCO0FBQ3hCRixrQkFBWSxRQURZO0FBRXhCQyxVQUFJO0FBRm9CLEtBQTFCO0FBSUQsR0FWRDtBQVdBZCxPQUFLZ0IsV0FBTCxHQUFtQixPQUFPO0FBQ3hCZCxVQUFNLFVBRGtCO0FBRXhCSSxxQkFBaUI7QUFGTyxHQUFQLENBQW5CO0FBSUEsU0FBT04sSUFBUDtBQUNELENBN0JEOztrQkErQmVILFMiLCJmaWxlIjoiY2VsbC5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlci9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjZWxsTW9kZWwgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgQ2VsbCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0NlbGwnLCB7XG4gICAgbmFtZToge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICAgIGFsbG93TnVsbDogZmFsc2VcbiAgICB9LFxuICAgIG51bWJlck9mTG9ja2Vyczoge1xuICAgICAgdHlwZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgICBhbGxvd051bGw6IGZhbHNlXG4gICAgfVxuICB9LCB7XG4gICAgcGFyYW5vaWQ6IHRydWUsXG4gIH0pO1xuICBDZWxsLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIENlbGwuaGFzTWFueShtb2RlbHMuQWxsb2NhdGlvbiwge1xuICAgICAgZm9yZWlnbktleTogJ2NlbGxJZCcsXG4gICAgICBhczogJ2FsbG9jYXRpb25zJ1xuICAgIH0pOyAgIFxuICAgIENlbGwuaGFzTWFueShtb2RlbHMuVXNlciwge1xuICAgICAgZm9yZWlnbktleTogJ2NlbGxJZCcsXG4gICAgICBhczogJ3VzZXJzJ1xuICAgIH0pO1xuICB9O1xuICBDZWxsLmNyZWF0ZVJ1bGVzID0gKCkgPT4gKHtcbiAgICBuYW1lOiAncmVxdWlyZWQnLFxuICAgIG51bWJlck9mTG9ja2VyczogJ3JlcXVpcmVkfGludGVnZXInXG4gIH0pO1xuICByZXR1cm4gQ2VsbDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNlbGxNb2RlbDtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "cell.js"
      ],
      "names": [
        "cellModel",
        "sequelize",
        "DataTypes",
        "Cell",
        "define",
        "name",
        "type",
        "STRING",
        "allowNull",
        "numberOfLockers",
        "INTEGER",
        "paranoid",
        "associate",
        "models",
        "hasMany",
        "Allocation",
        "foreignKey",
        "as",
        "User",
        "createRules"
      ],
      "mappings": ";;;;;AAAA,MAAMA,YAAY,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,QAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,UAAM;AACJC,YAAMJ,UAAUK,MADZ;AAEJC,iBAAW;AAFP,KAD8B;AAKpCC,qBAAiB;AACfH,YAAMJ,UAAUQ,OADD;AAEfF,iBAAW;AAFI;AALmB,GAAzB,EASV;AACDG,cAAU;AADT,GATU,CAAb;AAYAR,OAAKS,SAAL,GAAkBC,MAAD,IAAY;AAC3B;AACAV,SAAKW,OAAL,CAAaD,OAAOE,UAApB,EAAgC;AAC9BC,kBAAY,QADkB;AAE9BC,UAAI;AAF0B,KAAhC;AAIAd,SAAKW,OAAL,CAAaD,OAAOK,IAApB,EAA0B;AACxBF,kBAAY,QADY;AAExBC,UAAI;AAFoB,KAA1B;AAID,GAVD;AAWAd,OAAKgB,WAAL,GAAmB,OAAO;AACxBd,UAAM,UADkB;AAExBI,qBAAiB;AAFO,GAAP,CAAnB;AAIA,SAAON,IAAP;AACD,CA7BD;;kBA+BeH,S",
      "file": "cell.js",
      "sourceRoot": "/app/server/models",
      "sourcesContent": [
        "const cellModel = (sequelize, DataTypes) => {\n  const Cell = sequelize.define('Cell', {\n    name: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    numberOfLockers: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    }\n  }, {\n    paranoid: true,\n  });\n  Cell.associate = (models) => {\n    // associations can be defined here\n    Cell.hasMany(models.Allocation, {\n      foreignKey: 'cellId',\n      as: 'allocations'\n    });   \n    Cell.hasMany(models.User, {\n      foreignKey: 'cellId',\n      as: 'users'\n    });\n  };\n  Cell.createRules = () => ({\n    name: 'required',\n    numberOfLockers: 'required|integer'\n  });\n  return Cell;\n};\n\nexport default cellModel;\n"
      ]
    },
    "mtime": 1525874546501
  },
  "{\"filename\":\"/app/server/models/team.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/models/team.js",
      "filenameRelative": "/app/server/models/team.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "team.js",
      "sourceFileName": "team.js",
      "sourceRoot": "/app/server/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "team"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst teamModel = (sequelize, DataTypes) => {\n  const Team = sequelize.define('Team', {\n    bot: DataTypes.STRING,\n    slackToken: DataTypes.STRING,\n    teamId: DataTypes.STRING,\n    regState: DataTypes.STRING\n  }, {});\n  Team.associate = models => {\n    // associations can be defined here\n    Team.hasMany(models.User, {\n      foreignKey: 'userId',\n      onDelete: 'CASCADE'\n    });\n  };\n  return Team;\n};\n\nexports.default = teamModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlYW0uanMiXSwibmFtZXMiOlsidGVhbU1vZGVsIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiVGVhbSIsImRlZmluZSIsImJvdCIsIlNUUklORyIsInNsYWNrVG9rZW4iLCJ0ZWFtSWQiLCJyZWdTdGF0ZSIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJVc2VyIiwiZm9yZWlnbktleSIsIm9uRGVsZXRlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFlBQVksQ0FBQ0MsU0FBRCxFQUFZQyxTQUFaLEtBQTBCO0FBQzFDLFFBQU1DLE9BQU9GLFVBQVVHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLFNBQUtILFVBQVVJLE1BRHFCO0FBRXBDQyxnQkFBWUwsVUFBVUksTUFGYztBQUdwQ0UsWUFBUU4sVUFBVUksTUFIa0I7QUFJcENHLGNBQVVQLFVBQVVJO0FBSmdCLEdBQXpCLEVBS1YsRUFMVSxDQUFiO0FBTUFILE9BQUtPLFNBQUwsR0FBa0JDLE1BQUQsSUFBWTtBQUMzQjtBQUNBUixTQUFLUyxPQUFMLENBQWFELE9BQU9FLElBQXBCLEVBQTBCO0FBQ3hCQyxrQkFBWSxRQURZO0FBRXhCQyxnQkFBVTtBQUZjLEtBQTFCO0FBSUQsR0FORDtBQU9BLFNBQU9aLElBQVA7QUFDRCxDQWZEOztrQkFpQmVILFMiLCJmaWxlIjoidGVhbS5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlci9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0ZWFtTW9kZWwgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgVGVhbSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1RlYW0nLCB7XG4gICAgYm90OiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHNsYWNrVG9rZW46IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdGVhbUlkOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHJlZ1N0YXRlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICB9LCB7fSk7XG4gIFRlYW0uYXNzb2NpYXRlID0gKG1vZGVscykgPT4ge1xuICAgIC8vIGFzc29jaWF0aW9ucyBjYW4gYmUgZGVmaW5lZCBoZXJlXG4gICAgVGVhbS5oYXNNYW55KG1vZGVscy5Vc2VyLCB7XG4gICAgICBmb3JlaWduS2V5OiAndXNlcklkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERSdcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIFRlYW07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB0ZWFtTW9kZWw7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "team.js"
      ],
      "names": [
        "teamModel",
        "sequelize",
        "DataTypes",
        "Team",
        "define",
        "bot",
        "STRING",
        "slackToken",
        "teamId",
        "regState",
        "associate",
        "models",
        "hasMany",
        "User",
        "foreignKey",
        "onDelete"
      ],
      "mappings": ";;;;;AAAA,MAAMA,YAAY,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,QAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,SAAKH,UAAUI,MADqB;AAEpCC,gBAAYL,UAAUI,MAFc;AAGpCE,YAAQN,UAAUI,MAHkB;AAIpCG,cAAUP,UAAUI;AAJgB,GAAzB,EAKV,EALU,CAAb;AAMAH,OAAKO,SAAL,GAAkBC,MAAD,IAAY;AAC3B;AACAR,SAAKS,OAAL,CAAaD,OAAOE,IAApB,EAA0B;AACxBC,kBAAY,QADY;AAExBC,gBAAU;AAFc,KAA1B;AAID,GAND;AAOA,SAAOZ,IAAP;AACD,CAfD;;kBAiBeH,S",
      "file": "team.js",
      "sourceRoot": "/app/server/models",
      "sourcesContent": [
        "const teamModel = (sequelize, DataTypes) => {\n  const Team = sequelize.define('Team', {\n    bot: DataTypes.STRING,\n    slackToken: DataTypes.STRING,\n    teamId: DataTypes.STRING,\n    regState: DataTypes.STRING,\n  }, {});\n  Team.associate = (models) => {\n    // associations can be defined here\n    Team.hasMany(models.User, {\n      foreignKey: 'userId',\n      onDelete: 'CASCADE'\n    });\n  };\n  return Team;\n};\n\nexport default teamModel;\n"
      ]
    },
    "mtime": 1525858681400
  },
  "{\"filename\":\"/app/server/models/user.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/models/user.js",
      "filenameRelative": "/app/server/models/user.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "user.js",
      "sourceFileName": "user.js",
      "sourceRoot": "/app/server/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "user"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst userModel = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    email: DataTypes.STRING,\n    userId: DataTypes.STRING\n  }, {});\n  User.associate = models => {\n    // associations can be defined here\n    User.belongsTo(models.Team, {\n      foreignKey: 'teamId',\n      onDelete: 'CASCADE'\n    });\n\n    User.belongsTo(models.Allocation, {\n      foreignKey: 'allocationId',\n      onDelete: 'CASCADE'\n    });\n\n    User.belongsTo(models.Cell, {\n      foreignKey: 'cellId',\n      onDelete: 'CASCADE'\n    });\n  };\n  return User;\n};\n\nexports.default = userModel;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlck1vZGVsIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiVXNlciIsImRlZmluZSIsImVtYWlsIiwiU1RSSU5HIiwidXNlcklkIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiVGVhbSIsImZvcmVpZ25LZXkiLCJvbkRlbGV0ZSIsIkFsbG9jYXRpb24iLCJDZWxsIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLFlBQVksQ0FBQ0MsU0FBRCxFQUFZQyxTQUFaLEtBQTBCO0FBQzFDLFFBQU1DLE9BQU9GLFVBQVVHLE1BQVYsQ0FBaUIsTUFBakIsRUFBeUI7QUFDcENDLFdBQU9ILFVBQVVJLE1BRG1CO0FBRXBDQyxZQUFRTCxVQUFVSTtBQUZrQixHQUF6QixFQUdWLEVBSFUsQ0FBYjtBQUlBSCxPQUFLSyxTQUFMLEdBQWtCQyxNQUFELElBQVk7QUFDM0I7QUFDQU4sU0FBS08sU0FBTCxDQUFlRCxPQUFPRSxJQUF0QixFQUE0QjtBQUMxQkMsa0JBQVksUUFEYztBQUUxQkMsZ0JBQVU7QUFGZ0IsS0FBNUI7O0FBS0FWLFNBQUtPLFNBQUwsQ0FBZUQsT0FBT0ssVUFBdEIsRUFBa0M7QUFDaENGLGtCQUFZLGNBRG9CO0FBRWhDQyxnQkFBVTtBQUZzQixLQUFsQzs7QUFLQVYsU0FBS08sU0FBTCxDQUFlRCxPQUFPTSxJQUF0QixFQUE0QjtBQUMxQkgsa0JBQVksUUFEYztBQUUxQkMsZ0JBQVU7QUFGZ0IsS0FBNUI7QUFJRCxHQWhCRDtBQWlCQSxTQUFPVixJQUFQO0FBQ0QsQ0F2QkQ7O2tCQXlCZUgsUyIsImZpbGUiOiJ1c2VyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVyL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHVzZXJNb2RlbCA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBVc2VyID0gc2VxdWVsaXplLmRlZmluZSgnVXNlcicsIHtcbiAgICBlbWFpbDogRGF0YVR5cGVzLlNUUklORyxcbiAgICB1c2VySWQ6IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBVc2VyLmFzc29jaWF0ZSA9IChtb2RlbHMpID0+IHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICAgIFVzZXIuYmVsb25nc1RvKG1vZGVscy5UZWFtLCB7XG4gICAgICBmb3JlaWduS2V5OiAndGVhbUlkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERSdcbiAgICB9KTtcblxuICAgIFVzZXIuYmVsb25nc1RvKG1vZGVscy5BbGxvY2F0aW9uLCB7XG4gICAgICBmb3JlaWduS2V5OiAnYWxsb2NhdGlvbklkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERSdcbiAgICB9KTtcblxuICAgIFVzZXIuYmVsb25nc1RvKG1vZGVscy5DZWxsLCB7XG4gICAgICBmb3JlaWduS2V5OiAnY2VsbElkJyxcbiAgICAgIG9uRGVsZXRlOiAnQ0FTQ0FERSdcbiAgICB9KTtcbiAgfTtcbiAgcmV0dXJuIFVzZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VyTW9kZWw7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userModel",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "email",
        "STRING",
        "userId",
        "associate",
        "models",
        "belongsTo",
        "Team",
        "foreignKey",
        "onDelete",
        "Allocation",
        "Cell"
      ],
      "mappings": ";;;;;AAAA,MAAMA,YAAY,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,QAAMC,OAAOF,UAAUG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,WAAOH,UAAUI,MADmB;AAEpCC,YAAQL,UAAUI;AAFkB,GAAzB,EAGV,EAHU,CAAb;AAIAH,OAAKK,SAAL,GAAkBC,MAAD,IAAY;AAC3B;AACAN,SAAKO,SAAL,CAAeD,OAAOE,IAAtB,EAA4B;AAC1BC,kBAAY,QADc;AAE1BC,gBAAU;AAFgB,KAA5B;;AAKAV,SAAKO,SAAL,CAAeD,OAAOK,UAAtB,EAAkC;AAChCF,kBAAY,cADoB;AAEhCC,gBAAU;AAFsB,KAAlC;;AAKAV,SAAKO,SAAL,CAAeD,OAAOM,IAAtB,EAA4B;AAC1BH,kBAAY,QADc;AAE1BC,gBAAU;AAFgB,KAA5B;AAID,GAhBD;AAiBA,SAAOV,IAAP;AACD,CAvBD;;kBAyBeH,S",
      "file": "user.js",
      "sourceRoot": "/app/server/models",
      "sourcesContent": [
        "const userModel = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    email: DataTypes.STRING,\n    userId: DataTypes.STRING\n  }, {});\n  User.associate = (models) => {\n    // associations can be defined here\n    User.belongsTo(models.Team, {\n      foreignKey: 'teamId',\n      onDelete: 'CASCADE'\n    });\n\n    User.belongsTo(models.Allocation, {\n      foreignKey: 'allocationId',\n      onDelete: 'CASCADE'\n    });\n\n    User.belongsTo(models.Cell, {\n      foreignKey: 'cellId',\n      onDelete: 'CASCADE'\n    });\n  };\n  return User;\n};\n\nexport default userModel;\n"
      ]
    },
    "mtime": 1525874538421
  },
  "{\"filename\":\"/app/server/web-api/AllocationController.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/web-api\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "validatorjs",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Validator"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          },
          {
            "source": "../models/",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/web-api/AllocationController.js",
      "filenameRelative": "/app/server/web-api/AllocationController.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "AllocationController.js",
      "sourceFileName": "AllocationController.js",
      "sourceRoot": "/app/server/web-api",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/web-api",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "AllocationController"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _validatorjs = require('validatorjs');\n\nvar _validatorjs2 = _interopRequireDefault(_validatorjs);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nvar _models = require('../models/');\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Op = _sequelize2.default.Op;\nconst allocationModel = _models2.default.Allocation;\nconst cellModel = _models2.default.Cell;\n\nconst allocationController = {\n  async create(req, res) {\n    try {\n      const { requestBy, cellId, lockerNumber, requestStatus } = req.body;\n      const validator = new _validatorjs2.default(req.body, allocationModel.createRules(), { 'email.requestBy': 'Invalid Email' });\n      if (validator.passes()) {\n        // ensure user eligible to make request\n        const checkUserCanRequest = await allocationModel.findOne({\n          where: {\n            requestBy: {\n              [Op.eq]: requestBy\n            },\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            expired: {\n              [Op.eq]: null\n            }\n          }\n        });\n        if (checkUserCanRequest) {\n          return res.status(409).json({ message: 'You can not apply again', checkUserCanRequest });\n        }\n        // ensure locker available\n        const lockerOccupied = await allocationModel.findOne({\n          where: {\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            lockerNumber: {\n              [Op.eq]: lockerNumber\n            },\n            expired: {\n              [Op.eq]: null\n            }\n          }\n        });\n\n        if (lockerOccupied) {\n          return res.status(404).json({ message: 'Locker not available', lockerOccupied });\n        }\n\n        // Ensure locker number passed within range of locker numbers in cell\n        const cell = await cellModel.findById(cellId);\n        if (!cell) {\n          return res.status(404).json({ message: 'Cell deos not exist' });\n        }\n        if (lockerNumber > 0 && lockerNumber <= cell.numberOfLockers) {\n          const data = await allocationModel.create({ requestBy, cellId, lockerNumber, requestStatus });\n          return res.status(201).json({ message: 'Locker request successful', data });\n        }\n        return res.status(400).json({ message: 'Invalid locker number' });\n      }\n      return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async approveOrExpire(req, res) {\n    try {\n      const allocationExist = await allocationModel.findById(req.params.id);\n      if (allocationExist) {\n        if (req.body.action === 'approve') {\n          await allocationExist.update({ requestStatus: 'approved', expired: null });\n          return res.status(201).json({ message: 'Approved and key collected' });\n        }\n        if (req.body.action === 'reject') {\n          await allocationExist.update({ requestStatus: 'rejected', expired: new Date() });\n          return res.status(201).json({ message: 'Rejected request' });\n        }\n        await allocationExist.update({ expired: new Date() });\n        return res.status(201).json({ message: 'Locker key successfully returned' });\n      }\n      return res.status(404).json({ message: 'Allocation request does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async list(req, res) {\n    try {\n      const page = req.query.page <= 0 || req.query.page === undefined ? 0 : req.query.page - 1;\n      const limit = req.query.limit || 4;\n      const offset = limit * page;\n      const order = req.query.order && req.query.order.toLowerCase() === 'desc' ? [['createdAt', 'DESC']] : [['createdAt', 'ASC']];\n      const queryBuilder = {\n        limit,\n        offset,\n        order,\n        include: [{\n          model: cellModel,\n          attributes: ['name', 'numberOfLockers']\n        }]\n      };\n      if (req.query.cell) {\n        queryBuilder.where = {\n          cellId: req.query.cell\n        };\n      }\n      const data = await allocationModel.findAndCountAll(queryBuilder);\n      return res.status(200).json({ message: 'List of requests', data });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  }\n};\n\nexports.default = allocationController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "AllocationController.js"
      ],
      "names": [
        "Op",
        "Sequelize",
        "allocationModel",
        "db",
        "Allocation",
        "cellModel",
        "Cell",
        "allocationController",
        "create",
        "req",
        "res",
        "requestBy",
        "cellId",
        "lockerNumber",
        "requestStatus",
        "body",
        "validator",
        "Validator",
        "createRules",
        "passes",
        "checkUserCanRequest",
        "findOne",
        "where",
        "eq",
        "ne",
        "expired",
        "status",
        "json",
        "message",
        "lockerOccupied",
        "cell",
        "findById",
        "numberOfLockers",
        "data",
        "errors",
        "all",
        "approveOrExpire",
        "allocationExist",
        "params",
        "id",
        "action",
        "update",
        "Date",
        "list",
        "page",
        "query",
        "undefined",
        "limit",
        "offset",
        "order",
        "toLowerCase",
        "queryBuilder",
        "include",
        "model",
        "attributes",
        "findAndCountAll"
      ],
      "mappings": "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",
      "file": "AllocationController.js",
      "sourceRoot": "/app/server/web-api",
      "sourcesContent": [
        "import Validator from 'validatorjs';\nimport Sequelize from 'sequelize';\nimport db from '../models/';\n\nconst Op = Sequelize.Op;\nconst allocationModel = db.Allocation;\nconst cellModel = db.Cell;\n\nconst allocationController = {\n  async create(req, res) {\n    try {\n      const { requestBy, cellId, lockerNumber, requestStatus } = req.body;\n      const validator = new Validator(req.body, allocationModel.createRules(), { 'email.requestBy': 'Invalid Email' });\n      if (validator.passes()) {\n        // ensure user eligible to make request\n        const checkUserCanRequest = await allocationModel.findOne({\n          where: {\n            requestBy: {\n              [Op.eq]: requestBy\n            },\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            expired: {\n              [Op.eq]: null\n            },\n          }\n        });\n        if (checkUserCanRequest) {\n          return res.status(409).json({ message: 'You can not apply again', checkUserCanRequest });\n        }\n        // ensure locker available\n        const lockerOccupied = await allocationModel.findOne({\n          where: {\n            requestStatus: {\n              [Op.ne]: 'rejected'\n            },\n            lockerNumber: {\n              [Op.eq]: lockerNumber\n            },\n            expired: {\n              [Op.eq]: null\n            },\n          }\n        });\n\n        if (lockerOccupied) {\n          return res.status(404).json({ message: 'Locker not available', lockerOccupied });\n        }\n\n        // Ensure locker number passed within range of locker numbers in cell\n        const cell = await cellModel.findById(cellId);\n        if (!cell) {\n          return res.status(404).json({ message: 'Cell deos not exist' });\n        }\n        if (lockerNumber > 0 && lockerNumber <= cell.numberOfLockers) {\n          const data = await allocationModel.create({ requestBy, cellId, lockerNumber, requestStatus });\n          return res.status(201).json({ message: 'Locker request successful', data });\n        }\n        return res.status(400).json({ message: 'Invalid locker number' });\n      }\n      return res.status(400).json({ message: 'validation error(s)', errors: validator.errors.all() });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async approveOrExpire(req, res) {\n    try {\n      const allocationExist = await allocationModel.findById(req.params.id);\n      if (allocationExist) {\n        if (req.body.action === 'approve') {\n          await allocationExist.update({ requestStatus: 'approved', expired: null });\n          return res.status(201).json({ message: 'Approved and key collected' });\n        }\n        if (req.body.action === 'reject') {\n          await allocationExist.update({ requestStatus: 'rejected', expired: new Date() });\n          return res.status(201).json({ message: 'Rejected request' });\n        }\n        await allocationExist.update({ expired: new Date() });\n        return res.status(201).json({ message: 'Locker key successfully returned' });\n      }\n      return res.status(404).json({ message: 'Allocation request does not exist' });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  async list(req, res) {\n    try {\n      const page = (req.query.page <= 0 || req.query.page === undefined) ? 0 : req.query.page - 1;\n      const limit = req.query.limit || 4;\n      const offset = limit * page;\n      const order = (req.query.order && req.query.order.toLowerCase() === 'desc')\n        ? [['createdAt', 'DESC']] : [['createdAt', 'ASC']];\n      const queryBuilder = {\n        limit,\n        offset,\n        order,\n        include: [{\n          model: cellModel,\n          attributes: ['name', 'numberOfLockers']\n        }]\n      };\n      if (req.query.cell) {\n        queryBuilder.where = {\n          cellId: req.query.cell\n        };\n      }\n      const data = await allocationModel.findAndCountAll(queryBuilder);\n      return res.status(200).json({ message: 'List of requests', data });\n    } catch (errors) {\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  }\n};\n\nexport default allocationController;\n"
      ]
    },
    "mtime": 1525799043526
  },
  "{\"filename\":\"/app/server/controllers/slack.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/controllers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "@slack/client",
            "imported": [
              "WebClient"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "WebClient",
                "local": "WebClient"
              }
            ]
          },
          {
            "source": "build-url",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "buildUrl"
              }
            ]
          },
          {
            "source": "axios",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "axios"
              }
            ]
          },
          {
            "source": "uuid",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "uuid"
              }
            ]
          },
          {
            "source": "async",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "async"
              }
            ]
          },
          {
            "source": "sequelize",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "Sequelize"
              }
            ]
          },
          {
            "source": "../helpers/slackHelpers",
            "imported": [
              "testSlackToken",
              "sendMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "testSlackToken",
                "local": "testSlackToken"
              },
              {
                "kind": "named",
                "imported": "sendMessage",
                "local": "sendMessage"
              }
            ]
          },
          {
            "source": "../models/",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/controllers/slack.js",
      "filenameRelative": "/app/server/controllers/slack.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "slack.js",
      "sourceFileName": "slack.js",
      "sourceRoot": "/app/server/controllers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/controllers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "slack"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _client = require('@slack/client');\n\nvar _buildUrl = require('build-url');\n\nvar _buildUrl2 = _interopRequireDefault(_buildUrl);\n\nvar _axios = require('axios');\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _uuid = require('uuid');\n\nvar _uuid2 = _interopRequireDefault(_uuid);\n\nvar _async = require('async');\n\nvar _async2 = _interopRequireDefault(_async);\n\nvar _sequelize = require('sequelize');\n\nvar _sequelize2 = _interopRequireDefault(_sequelize);\n\nvar _slackHelpers = require('../helpers/slackHelpers');\n\nvar _models = require('../models/');\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Team = _models2.default.Team;\nconst User = _models2.default.User;\nconst Cell = _models2.default.Cell;\n\nconst Op = _sequelize2.default.Op;\n\nconst allocationModel = _models2.default.Allocation;\n\nconst authUrl = 'https://slack.com/oauth/authorize';\nconst scope = 'commands,bot,im:write,reactions:read,users.profile:read,chat:write:bot,users:read,users:read.email,chat:write:user';\n\nconst slack = {\n  authorise(req, res, next) {\n    const teamId = req.params.id.toUpperCase();\n    let state;\n    Team.findOne({\n      where: {\n        teamId\n      }\n    }).then(team => {\n      if (!team) {\n        state = _uuid2.default.v4();\n        Team.create({\n          regState: state,\n          teamId\n        }).then(team => {}).catch(error => console.log(error));\n      } else {\n        state = team.regState;\n      }\n\n      const queryParams = {\n        client_id: process.env.SLACK_CLIENT_ID,\n        scope,\n        redirect_uri: `${process.env.BASE_URI}slack/authenticate`,\n        state\n      };\n\n      const url = (0, _buildUrl2.default)(authUrl, { queryParams });\n      return res.redirect(url);\n    }).catch(error => console.log(error));\n  },\n\n  saveToken(req, res, next) {\n    if (!req.query.code) {\n      return res.status(401).send({ message: 'code not provided, contact developer' });\n    }\n\n    if (!req.query.state) {\n      return res.status(401).send({ message: 'state not provided, contact developer' });\n    }\n\n    const code = req.query.code;\n    const regState = req.query.state;\n    const authed = new _client.WebClient();\n\n    authed.oauth.access({ client_id: process.env.SLACK_CLIENT_ID,\n      client_secret: process.env.SLACK_CLIENT_SECRET,\n      code }).then(data => {\n      // TODO: save the access token to the team\n\n      if (regState) {\n        Team.findOne({\n          where: {\n            regState\n          }\n        }).then(team => {\n          if (!team) return res.redirect(`${process.env.BASE_URI}fail`);\n\n          (0, _slackHelpers.testSlackToken)(data.access_token).then(verifiedData => {\n            const teamId = verifiedData.team_id;\n\n            _async2.default.parallel([function (cb) {\n              const userId = verifiedData.user_id;\n              User.findOrCreate({ where: { userId }, defaults: { teamId } }).then(user => {\n                cb();\n              }).catch(error => {\n                return res.send('Error saving slack token', error);\n              });\n\n              User;\n            }, function (cb) {\n              Team.update({ bot: data.bot.bot_access_token, slackToken: data.access_token }, { where: { teamId } }).then(team => {\n                cb();\n              }).catch(error => {\n                return res.send('Error saving slack token');\n              });\n            }], (er, result) => {\n              return res.send({ message: 'ok' });\n            });\n          }).catch(error => {\n            console.log('Auth test error', error);\n          });\n        }).catch(error => {\n          console.log('Error searching for user', error);\n        });\n      } else {\n        return res.redirect(`${process.env.BASE_URI}fail`);\n      }\n    }).catch(error => {\n      console.log('Some Auth error', error);\n    });\n  },\n\n  findKey: async (req, res) => {\n    try {\n      const cellText = req.body.text;\n      const authed = new _client.WebClient(req.team.token);\n\n      const cells = await Cell.findAll();\n      const cellNames = cells.map(cell => cell.name);\n      const cellNamesString = cellNames.join(', ');\n\n      const cell = cells.find(cell => cell.name === cellText);\n\n      if (!cell) {\n        let errorMessage;\n        if (cellNamesString.length === 0) {\n          errorMessage = 'There are no locations for your workspace. Please contact Facilities';\n        } else {\n          errorMessage = `Please enter a valid location, one of the item in list [${cellNamesString}]`;\n        }\n        return (0, _slackHelpers.sendMessage)({ responseUrl: req.body.response_url,\n          message: errorMessage });\n      }\n\n      const user = await User.findOne({\n        where: {\n          userId: req.body.user_id\n        }\n      });\n      if (!user) {\n        await User.create({\n          userId: req.body.user_id,\n          teamId: req.body.team_id,\n          cellId: cell.id,\n          slacktoken: req.team.token,\n          email: req.body.user_name,\n          regstate: _uuid2.default.v4()\n        });\n      } else {\n        await User.update({ cellId: cell.id, slacktoken: req.team.token, email: req.body.user_name }, { where: {\n            userId: req.body.user_id\n          } });\n        if (user.allocationId) {\n          const allocation = await allocationModel.findOne({\n            where: { id: user.allocationId }\n          });\n          const requestedCell = await allocation.getCell();\n          const messagePrompt = `Your request for *key ${allocation.lockerNumber}* on ${requestedCell.name} is at the *${allocation.requestStatus} phase*. Please contact Facilities.`;\n          const message = {\n            channel: req.body.user_id,\n            text: messagePrompt\n          };\n          const result = await authed.chat.postMessage(message);\n          return result;\n        }\n      }\n\n      const lockerNoArray = Array.from({ length: cell.numberOfLockers }, (v, k) => k + 1);\n      const lockerOccupiedInCell = await allocationModel.findAll({\n        where: {\n          cellId: cell.id,\n          requestStatus: {\n            [Op.ne]: 'rejected'\n          },\n          expired: null\n        }\n      });\n\n      const unavailableLockers = lockerOccupiedInCell.map(allocation => allocation.lockerNumber);\n      const availableLockers = lockerNoArray.filter(lockerNumber => !unavailableLockers.includes(lockerNumber));\n\n      let messagePayload;\n\n      if (availableLockers.length > 0) {\n        const options = availableLockers.map(keyValue => ({\n          text: `Key ${keyValue}`,\n          value: keyValue\n        }));\n\n        messagePayload = {\n          channel: req.body.user_id,\n          text: 'Select a locker with locker',\n          attachments: [{\n            text: `Select a locker from ${cell.name}`,\n            fallback: `Select a locker from ${cell.name}`,\n            color: '#3AA3E3',\n            attachment_type: 'default',\n            callback_id: 'locker_selection',\n            actions: [{\n              name: 'empty_lockers',\n              text: `Pick a key`,\n              type: 'select',\n              options\n            }]\n          }]\n        };\n      } else {\n        messagePayload = {\n          channel: req.body.user_id,\n          text: `There are no empty lockers on ${cell.name}. Please contact Facilites`\n        };\n      }\n\n      const result = await authed.chat.postMessage(messagePayload);\n      console.log('message sent', result);\n    } catch (errors) {\n      console.log(errors, 'the error message');\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  selectKey: async (req, res) => {\n    console.log('are we handling selections?');\n    const actions = req.requestObject.actions;\n    const action = actions.find(action => {\n      return action.name == 'empty_lockers';\n    });\n\n    const selectedOptions = action.selected_options;\n    const selection = selectedOptions[0].value;\n\n    const user = await User.findOne({\n      where: {\n        userId: req.body.user_id\n      }\n    });\n\n    if (!user) return;\n\n    if (user.allocationId) {\n      return (0, _slackHelpers.sendMessage)({ responseUrl: req.requestObject.response_url,\n        message: 'You have already requested for a key' });\n    };\n\n    const cellId = user.cellId;\n    const cell = await Cell.findOne({\n      where: { id: cellId }\n    });\n\n    if (!cell) return;\n\n    const allocation = await cell.getAllocations({\n      where: {\n        lockerNumber: selection\n      }\n    });\n\n    if (allocation.length === 0) {\n      await allocationModel.create({\n        cellId,\n        requestStatus: 'request',\n        requestBy: req.requestObject.user.name,\n        lockerNumber: selection\n      });\n    } else {\n      const updatedAllocation = await allocationModel.update({\n        requestStatus: 'request',\n        requestBy: req.requestObject.user.name\n      }, {\n        where: { lockerNumber: selection }\n      });\n    }\n\n    const userAllocated = await User.update({\n      allocationId: allocation[0].dataValues.id\n    }, {\n      where: { userId: req.body.user_id }\n    });\n\n    (0, _slackHelpers.sendMessage)({ responseUrl: req.requestObject.response_url,\n      message: 'We are processing your request, contact Facilities for your approved key' });\n  }\n};\n\nexports.default = slack;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "slack.js"
      ],
      "names": [
        "Team",
        "db",
        "User",
        "Cell",
        "Op",
        "Sequelize",
        "allocationModel",
        "Allocation",
        "authUrl",
        "scope",
        "slack",
        "authorise",
        "req",
        "res",
        "next",
        "teamId",
        "params",
        "id",
        "toUpperCase",
        "state",
        "findOne",
        "where",
        "then",
        "team",
        "uuid",
        "v4",
        "create",
        "regState",
        "catch",
        "error",
        "console",
        "log",
        "queryParams",
        "client_id",
        "process",
        "env",
        "SLACK_CLIENT_ID",
        "redirect_uri",
        "BASE_URI",
        "url",
        "redirect",
        "saveToken",
        "query",
        "code",
        "status",
        "send",
        "message",
        "authed",
        "WebClient",
        "oauth",
        "access",
        "client_secret",
        "SLACK_CLIENT_SECRET",
        "data",
        "access_token",
        "verifiedData",
        "team_id",
        "async",
        "parallel",
        "cb",
        "userId",
        "user_id",
        "findOrCreate",
        "defaults",
        "user",
        "update",
        "bot",
        "bot_access_token",
        "slackToken",
        "er",
        "result",
        "findKey",
        "cellText",
        "body",
        "text",
        "token",
        "cells",
        "findAll",
        "cellNames",
        "map",
        "cell",
        "name",
        "cellNamesString",
        "join",
        "find",
        "errorMessage",
        "length",
        "responseUrl",
        "response_url",
        "cellId",
        "slacktoken",
        "email",
        "user_name",
        "regstate",
        "allocationId",
        "allocation",
        "requestedCell",
        "getCell",
        "messagePrompt",
        "lockerNumber",
        "requestStatus",
        "channel",
        "chat",
        "postMessage",
        "lockerNoArray",
        "Array",
        "from",
        "numberOfLockers",
        "v",
        "k",
        "lockerOccupiedInCell",
        "ne",
        "expired",
        "unavailableLockers",
        "availableLockers",
        "filter",
        "includes",
        "messagePayload",
        "options",
        "keyValue",
        "value",
        "attachments",
        "fallback",
        "color",
        "attachment_type",
        "callback_id",
        "actions",
        "type",
        "errors",
        "json",
        "selectKey",
        "requestObject",
        "action",
        "selectedOptions",
        "selected_options",
        "selection",
        "getAllocations",
        "requestBy",
        "updatedAllocation",
        "userAllocated",
        "dataValues"
      ],
      "mappings": "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",
      "file": "slack.js",
      "sourceRoot": "/app/server/controllers",
      "sourcesContent": [
        "\nimport { WebClient } from '@slack/client';\nimport buildUrl from 'build-url';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport async from 'async';\nimport Sequelize from 'sequelize';\nimport { testSlackToken, sendMessage } from '../helpers/slackHelpers';\nimport db from '../models/';\n\nconst Team = db.Team;\nconst User = db.User;\nconst Cell = db.Cell;\n\nconst Op = Sequelize.Op;\n\nconst allocationModel = db.Allocation;\n\nconst authUrl = 'https://slack.com/oauth/authorize';\nconst scope = 'commands,bot,im:write,reactions:read,users.profile:read,chat:write:bot,users:read,users:read.email,chat:write:user';\n\nconst slack = {\n  authorise(req, res, next) {\n    const teamId = req.params.id.toUpperCase();\n    let state;\n    Team.findOne({\n      where: {\n        teamId\n      }\n    }).then((team) => {\n      if (!team) {\n        state = uuid.v4();\n        Team.create({\n          regState: state,\n          teamId\n        })\n          .then((team) => {\n          })\n          .catch(error => console.log(error));\n        } else {\n          state = team.regState;\n        }\n      \n      const queryParams = {\n              client_id: process.env.SLACK_CLIENT_ID,\n              scope,\n              redirect_uri: `${process.env.BASE_URI}slack/authenticate`,\n              state\n            };\n\n            const url = buildUrl(authUrl, { queryParams });\n            return res.redirect(url);\n    })\n    .catch((error) => (console.log(error)))\n  },\n\n  saveToken(req, res, next) {\n    if (!req.query.code) {\n      return res.status(401).send({ message: 'code not provided, contact developer' })\n    }\n    \n    if (!req.query.state) {\n      return res.status(401).send({ message: 'state not provided, contact developer' })\n    }\n\n    const code = req.query.code;\n    const regState = req.query.state;\n    const authed = new WebClient();\n\n    authed.oauth.access({ client_id: process.env.SLACK_CLIENT_ID,\n                          client_secret: process.env.SLACK_CLIENT_SECRET,\n                          code})\n      .then((data) => {\n        // TODO: save the access token to the team\n\n        if (regState) {\n          Team.findOne({\n            where: {\n              regState\n            }\n          }).then((team) => {\n            if (!team) return res.redirect(`${process.env.BASE_URI}fail`);\n\n            testSlackToken(data.access_token)\n              .then((verifiedData) => {\n                const teamId = verifiedData.team_id;\n\n                async.parallel([\n                  function (cb) {\n                    const userId = verifiedData.user_id;\n                    User.findOrCreate({ where: { userId }, defaults: { teamId } })\n                      .then((user) => {\n                        cb();\n                      })\n                      .catch((error) => {\n                        return res.send('Error saving slack token', error);\n                      });\n                    \n                    User\n                  },\n                  function (cb) {\n                    Team.update({ bot: data.bot.bot_access_token, slackToken: data.access_token }, { where: { teamId } })\n                      .then((team) => {\n                        cb();\n                      })\n                      .catch((error) => {\n                        return res.send('Error saving slack token');\n                      });\n                  }], (er, result) => {\n                  return res.send({ message: 'ok' });\n                });\n              })\n              .catch((error) => {\n                console.log('Auth test error', error);\n              });\n          })\n            .catch((error) => {\n              console.log('Error searching for user', error);\n            });\n        } else {\n          return res.redirect(`${process.env.BASE_URI}fail`);\n        }\n      })\n      .catch((error) => {\n        console.log('Some Auth error', error);\n      });\n  },\n\n  findKey: async (req, res) => {\n    try {\n      const cellText = req.body.text;\n      const authed = new WebClient(req.team.token);\n\n      const cells = await Cell.findAll();\n      const cellNames = cells.map(cell => cell.name);\n      const cellNamesString = cellNames.join(', ');\n\n      const cell = cells.find(cell => cell.name === cellText);\n\n      if (!cell) {\n        let errorMessage;\n        if (cellNamesString.length === 0) {\n          errorMessage = 'There are no locations for your workspace. Please contact Facilities';\n        } else {\n          errorMessage = `Please enter a valid location, one of the item in list [${cellNamesString}]`;\n        }\n        return sendMessage({ responseUrl: req.body.response_url,\n                             message: errorMessage });  \n      }\n\n      const user = await User.findOne({\n        where: {\n          userId: req.body.user_id\n        }\n      });\n      if (!user) {\n        await User.create({\n          userId: req.body.user_id,\n          teamId: req.body.team_id,\n          cellId: cell.id,\n          slacktoken: req.team.token,\n          email: req.body.user_name,\n          regstate: uuid.v4()\n        });\n      } else {\n        await User.update({ cellId: cell.id, slacktoken: req.team.token, email: req.body.user_name }, { where: {\n          userId: req.body.user_id\n        } });\n        if (user.allocationId) {\n          const allocation = await allocationModel.findOne({\n            where: { id: user.allocationId }\n          });\n          const requestedCell = await allocation.getCell();\n          const messagePrompt = `Your request for *key ${allocation.lockerNumber}* on ${requestedCell.name} is at the *${allocation.requestStatus} phase*. Please contact Facilities.`\n          const message = {\n            channel: req.body.user_id,\n            text: messagePrompt\n          };\n          const result = await authed.chat.postMessage(message);\n          return result;\n        }\n      }\n\n      const lockerNoArray = Array.from({ length: cell.numberOfLockers }, (v, k) => k + 1);\n      const lockerOccupiedInCell = await allocationModel.findAll({\n       where: {\n          cellId: cell.id,\n          requestStatus: {\n            [Op.ne]: 'rejected'\n          },\n          expired: null,\n        }\n      });\n      \n       \n      const unavailableLockers = lockerOccupiedInCell.map(allocation => allocation.lockerNumber);\n      const availableLockers = lockerNoArray.filter(lockerNumber => !unavailableLockers.includes(lockerNumber));\n\n      \n      let messagePayload;\n\n     if (availableLockers.length > 0) {\n      const options = availableLockers.map(keyValue => ({\n        text: `Key ${keyValue}`,\n        value: keyValue\n      }));\n\n      messagePayload = {\n        channel: req.body.user_id,\n        text: 'Select a locker with locker',\n        attachments: [{\n          text: `Select a locker from ${cell.name}`,\n          fallback: `Select a locker from ${cell.name}`,\n          color: '#3AA3E3',\n          attachment_type: 'default',\n          callback_id: 'locker_selection',\n          actions: [{\n            name: 'empty_lockers',\n            text: `Pick a key`,\n            type: 'select',\n            options\n          }]\n        }]\n      };\n     } else {\n       messagePayload = {\n         channel: req.body.user_id,\n         text: `There are no empty lockers on ${cell.name}. Please contact Facilites`\n       };\n     }\n      \n      \n      const result = await authed.chat.postMessage(messagePayload);\n      console.log('message sent', result);\n    } catch (errors) {\n      console.log(errors, 'the error message');\n      return res.status(400).json({ message: 'Some server problems, please try again', errors });\n    }\n  },\n\n  selectKey: async (req, res) => {\n    console.log('are we handling selections?');\n    const actions = req.requestObject.actions;\n    const action = actions.find((action) => {\n      return action.name == 'empty_lockers';\n    });\n  \n    const selectedOptions = action.selected_options;\n    const selection = selectedOptions[0].value;\n    \n    const user = await User.findOne({\n      where: {\n        userId: req.body.user_id\n      }\n    });\n    \n    if (!user) return ;\n    \n    if(user.allocationId) {\n      return sendMessage({ responseUrl: req.requestObject.response_url, \n                    message: 'You have already requested for a key'});\n    };\n   \n    const cellId = user.cellId;\n    const cell =  await Cell.findOne({\n      where: { id: cellId}\n    });\n    \n    if (!cell) return;\n    \n    const allocation = await cell.getAllocations({\n      where: {\n        lockerNumber: selection\n      }\n    });\n    \n    if (allocation.length === 0) {\n      await allocationModel.create({\n        cellId,\n        requestStatus: 'request',\n        requestBy: req.requestObject.user.name,\n        lockerNumber: selection\n      });\n    } else {\n      const updatedAllocation = await allocationModel.update({\n        requestStatus: 'request',\n        requestBy: req.requestObject.user.name\n      }, {\n        where: { lockerNumber: selection }\n      });\n    }\n    \n     const userAllocated = await User.update({\n        allocationId: allocation[0].dataValues.id\n      }, {\n        where: { userId: req.body.user_id }\n      });\n    \n    \n    \n    sendMessage({ responseUrl: req.requestObject.response_url, \n                 message: 'We are processing your request, contact Facilities for your approved key'});\n  }\n};\n\nexport default slack;\n"
      ]
    },
    "mtime": 1525975823596
  },
  "{\"filename\":\"/app/server/helpers/slackHelpers.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/helpers\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "@slack/client",
            "imported": [
              "WebClient"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "WebClient",
                "local": "WebClient"
              }
            ]
          },
          {
            "source": "axios",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "axios"
              }
            ]
          }
        ],
        "exports": {
          "exported": [
            "testSlackToken",
            "sendMessage",
            "sendPrivateMessage"
          ],
          "specifiers": [
            {
              "kind": "local",
              "local": "testSlackToken",
              "exported": "testSlackToken"
            },
            {
              "kind": "local",
              "local": "sendMessage",
              "exported": "sendMessage"
            },
            {
              "kind": "local",
              "local": "sendPrivateMessage",
              "exported": "sendPrivateMessage"
            }
          ]
        }
      }
    },
    "options": {
      "filename": "/app/server/helpers/slackHelpers.js",
      "filenameRelative": "/app/server/helpers/slackHelpers.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "slackHelpers.js",
      "sourceFileName": "slackHelpers.js",
      "sourceRoot": "/app/server/helpers",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/helpers",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "slackHelpers"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendPrivateMessage = exports.sendMessage = exports.testSlackToken = undefined;\n\nvar _client = require(\"@slack/client\");\n\nvar _axios = require(\"axios\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst testSlackToken = exports.testSlackToken = token => {\n  return new _client.WebClient(token).auth.test();\n};\n\nconst sendMessage = exports.sendMessage = ({ responseUrl, message: text, response_type }) => {\n  _axios2.default.post(responseUrl, { text, response_type }).then(response => console.log(response)).catch(error => console.log(error));\n};\n\nconst sendPrivateMessage = exports.sendPrivateMessage = (token, userId, message, payload) => {\n  let authObject = new _client.WebClient(token);\n\n  return authObject.im.open(userId).then(data => authObject.chat.postMessage(data.channel.id, message)).then(response => console.log(response)).catch(error => console.log(error));\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsYWNrSGVscGVycy5qcyJdLCJuYW1lcyI6WyJ0ZXN0U2xhY2tUb2tlbiIsInRva2VuIiwiV2ViQ2xpZW50IiwiYXV0aCIsInRlc3QiLCJzZW5kTWVzc2FnZSIsInJlc3BvbnNlVXJsIiwibWVzc2FnZSIsInRleHQiLCJyZXNwb25zZV90eXBlIiwiYXhpb3MiLCJwb3N0IiwidGhlbiIsInJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsImNhdGNoIiwiZXJyb3IiLCJzZW5kUHJpdmF0ZU1lc3NhZ2UiLCJ1c2VySWQiLCJwYXlsb2FkIiwiYXV0aE9iamVjdCIsImltIiwib3BlbiIsImRhdGEiLCJjaGF0IiwicG9zdE1lc3NhZ2UiLCJjaGFubmVsIiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRU8sTUFBTUEsMENBQWtCQyxLQUFELElBQVc7QUFDdkMsU0FBTyxJQUFJQyxpQkFBSixDQUFjRCxLQUFkLEVBQXFCRSxJQUFyQixDQUEwQkMsSUFBMUIsRUFBUDtBQUNELENBRk07O0FBSUEsTUFBTUMsb0NBQWMsQ0FBQyxFQUFFQyxXQUFGLEVBQWVDLFNBQVNDLElBQXhCLEVBQThCQyxhQUE5QixFQUFELEtBQW1EO0FBQzVFQyxrQkFBTUMsSUFBTixDQUFXTCxXQUFYLEVBQXdCLEVBQUVFLElBQUYsRUFBUUMsYUFBUixFQUF4QixFQUNHRyxJQURILENBQ1FDLFlBQVlDLFFBQVFDLEdBQVIsQ0FBWUYsUUFBWixDQURwQixFQUVHRyxLQUZILENBRVNDLFNBQVNILFFBQVFDLEdBQVIsQ0FBWUUsS0FBWixDQUZsQjtBQUdELENBSk07O0FBTUEsTUFBTUMsa0RBQXFCLENBQUNqQixLQUFELEVBQVFrQixNQUFSLEVBQWdCWixPQUFoQixFQUF5QmEsT0FBekIsS0FBb0M7QUFDcEUsTUFBSUMsYUFBYSxJQUFJbkIsaUJBQUosQ0FBY0QsS0FBZCxDQUFqQjs7QUFFQSxTQUFPb0IsV0FBV0MsRUFBWCxDQUFjQyxJQUFkLENBQW1CSixNQUFuQixFQUNKUCxJQURJLENBQ0VZLElBQUQsSUFBV0gsV0FBV0ksSUFBWCxDQUFnQkMsV0FBaEIsQ0FBNEJGLEtBQUtHLE9BQUwsQ0FBYUMsRUFBekMsRUFBNkNyQixPQUE3QyxDQURaLEVBRUpLLElBRkksQ0FFQ0MsWUFBWUMsUUFBUUMsR0FBUixDQUFZRixRQUFaLENBRmIsRUFHSkcsS0FISSxDQUdFQyxTQUFTSCxRQUFRQyxHQUFSLENBQVlFLEtBQVosQ0FIWCxDQUFQO0FBSUQsQ0FQTSIsImZpbGUiOiJzbGFja0hlbHBlcnMuanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXIvaGVscGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYkNsaWVudCB9IGZyb20gXCJAc2xhY2svY2xpZW50XCI7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5leHBvcnQgY29uc3QgdGVzdFNsYWNrVG9rZW4gPSAodG9rZW4pID0+IHtcbiAgcmV0dXJuIG5ldyBXZWJDbGllbnQodG9rZW4pLmF1dGgudGVzdCgpO1xufVxuXG5leHBvcnQgY29uc3Qgc2VuZE1lc3NhZ2UgPSAoeyByZXNwb25zZVVybCwgbWVzc2FnZTogdGV4dCwgcmVzcG9uc2VfdHlwZSB9KSA9PiB7XG4gIGF4aW9zLnBvc3QocmVzcG9uc2VVcmwsIHsgdGV4dCwgcmVzcG9uc2VfdHlwZSB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IGNvbnNvbGUubG9nKHJlc3BvbnNlKSlcbiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNlbmRQcml2YXRlTWVzc2FnZSA9ICh0b2tlbiwgdXNlcklkLCBtZXNzYWdlLCBwYXlsb2FkKSA9PntcbiAgbGV0IGF1dGhPYmplY3QgPSBuZXcgV2ViQ2xpZW50KHRva2VuKTtcblxuICByZXR1cm4gYXV0aE9iamVjdC5pbS5vcGVuKHVzZXJJZClcbiAgICAudGhlbigoZGF0YSkgPT4gKGF1dGhPYmplY3QuY2hhdC5wb3N0TWVzc2FnZShkYXRhLmNoYW5uZWwuaWQsIG1lc3NhZ2UpKSlcbiAgICAudGhlbihyZXNwb25zZSA9PiBjb25zb2xlLmxvZyhyZXNwb25zZSkpXG4gICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSk7XG59XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "slackHelpers.js"
      ],
      "names": [
        "testSlackToken",
        "token",
        "WebClient",
        "auth",
        "test",
        "sendMessage",
        "responseUrl",
        "message",
        "text",
        "response_type",
        "axios",
        "post",
        "then",
        "response",
        "console",
        "log",
        "catch",
        "error",
        "sendPrivateMessage",
        "userId",
        "payload",
        "authObject",
        "im",
        "open",
        "data",
        "chat",
        "postMessage",
        "channel",
        "id"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;AAEO,MAAMA,0CAAkBC,KAAD,IAAW;AACvC,SAAO,IAAIC,iBAAJ,CAAcD,KAAd,EAAqBE,IAArB,CAA0BC,IAA1B,EAAP;AACD,CAFM;;AAIA,MAAMC,oCAAc,CAAC,EAAEC,WAAF,EAAeC,SAASC,IAAxB,EAA8BC,aAA9B,EAAD,KAAmD;AAC5EC,kBAAMC,IAAN,CAAWL,WAAX,EAAwB,EAAEE,IAAF,EAAQC,aAAR,EAAxB,EACGG,IADH,CACQC,YAAYC,QAAQC,GAAR,CAAYF,QAAZ,CADpB,EAEGG,KAFH,CAESC,SAASH,QAAQC,GAAR,CAAYE,KAAZ,CAFlB;AAGD,CAJM;;AAMA,MAAMC,kDAAqB,CAACjB,KAAD,EAAQkB,MAAR,EAAgBZ,OAAhB,EAAyBa,OAAzB,KAAoC;AACpE,MAAIC,aAAa,IAAInB,iBAAJ,CAAcD,KAAd,CAAjB;;AAEA,SAAOoB,WAAWC,EAAX,CAAcC,IAAd,CAAmBJ,MAAnB,EACJP,IADI,CACEY,IAAD,IAAWH,WAAWI,IAAX,CAAgBC,WAAhB,CAA4BF,KAAKG,OAAL,CAAaC,EAAzC,EAA6CrB,OAA7C,CADZ,EAEJK,IAFI,CAECC,YAAYC,QAAQC,GAAR,CAAYF,QAAZ,CAFb,EAGJG,KAHI,CAGEC,SAASH,QAAQC,GAAR,CAAYE,KAAZ,CAHX,CAAP;AAID,CAPM",
      "file": "slackHelpers.js",
      "sourceRoot": "/app/server/helpers",
      "sourcesContent": [
        "import { WebClient } from \"@slack/client\";\nimport axios from 'axios';\n\nexport const testSlackToken = (token) => {\n  return new WebClient(token).auth.test();\n}\n\nexport const sendMessage = ({ responseUrl, message: text, response_type }) => {\n  axios.post(responseUrl, { text, response_type })\n    .then(response => console.log(response))\n    .catch(error => console.log(error));\n}\n\nexport const sendPrivateMessage = (token, userId, message, payload) =>{\n  let authObject = new WebClient(token);\n\n  return authObject.im.open(userId)\n    .then((data) => (authObject.chat.postMessage(data.channel.id, message)))\n    .then(response => console.log(response))\n    .catch(error => console.log(error));\n}\n"
      ]
    },
    "mtime": 1525858375761
  },
  "{\"filename\":\"/app/server/middleware/slackAuth.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/middleware\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "../models/user",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "User"
              }
            ]
          },
          {
            "source": "../helpers/slackHelpers",
            "imported": [
              "testSlackToken",
              "sendMessage"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "testSlackToken",
                "local": "testSlackToken"
              },
              {
                "kind": "named",
                "imported": "sendMessage",
                "local": "sendMessage"
              }
            ]
          },
          {
            "source": "../models/",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "db"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/middleware/slackAuth.js",
      "filenameRelative": "/app/server/middleware/slackAuth.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "slackAuth.js",
      "sourceFileName": "slackAuth.js",
      "sourceRoot": "/app/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "slackAuth"
    },
    "ignored": false,
    "code": "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _user = require('../models/user');\n\nvar _user2 = _interopRequireDefault(_user);\n\nvar _slackHelpers = require('../helpers/slackHelpers');\n\nvar _models = require('../models/');\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Team = _models2.default.Team;\n\nconst slackAuth = (req, res, next) => {\n  console.log('we are handling authentication');\n  if (!req.body.token) return res.send('No token provided');else if (req.body.token !== process.env.SLACK_TOKEN) return res.send('Invalid token provided');\n  res.status(200).send();\n\n  const userId = req.body.user_id;\n  req.team = {};\n\n  const teamId = req.body.team_id;\n  if (teamId) {\n    console.log('we found the team id');\n    const authMessage = `It seems like *locker* has not been added to your workspace, please got to ${process.env.BASE_URI}slack/authorise/${teamId.toLowerCase()}`;\n\n    Team.findOne({ where: { teamId } }).then(team => {\n      if (!team) {\n        console.log('we did not find the team');\n        return (0, _slackHelpers.sendMessage)({ responseUrl: req.body.response_url, message: authMessage });\n      }\n      console.log('we found the team');\n      if (team.slackToken) {\n        console.log('we found team slack token');\n        (0, _slackHelpers.testSlackToken)(team.slackToken).then(data => {\n          if (data.ok) {\n            console.log('the token test passed');\n            req.team = { token: team.slackToken };\n            next();\n          } else {\n            console.log('thet token test failed');\n            return (0, _slackHelpers.sendMessage)({ responseUrl: req.body.response_url, message: authMessage });\n          }\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        console.log('there was team id');\n        return (0, _slackHelpers.sendMessage)({ responseUrl: req.body.response_url, message: authMessage });\n      }\n    });\n  }\n};\nexports.default = slackAuth;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsYWNrQXV0aC5qcyJdLCJuYW1lcyI6WyJUZWFtIiwiZGIiLCJzbGFja0F1dGgiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJ0b2tlbiIsInNlbmQiLCJwcm9jZXNzIiwiZW52IiwiU0xBQ0tfVE9LRU4iLCJzdGF0dXMiLCJ1c2VySWQiLCJ1c2VyX2lkIiwidGVhbSIsInRlYW1JZCIsInRlYW1faWQiLCJhdXRoTWVzc2FnZSIsIkJBU0VfVVJJIiwidG9Mb3dlckNhc2UiLCJmaW5kT25lIiwid2hlcmUiLCJ0aGVuIiwicmVzcG9uc2VVcmwiLCJyZXNwb25zZV91cmwiLCJtZXNzYWdlIiwic2xhY2tUb2tlbiIsImRhdGEiLCJvayIsImNhdGNoIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVBLE1BQU1BLE9BQU9DLGlCQUFHRCxJQUFoQjs7QUFFQSxNQUFNRSxZQUFZLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEtBQW9CO0FBQ3BDQyxVQUFRQyxHQUFSLENBQVksZ0NBQVo7QUFDQSxNQUFJLENBQUNKLElBQUlLLElBQUosQ0FBU0MsS0FBZCxFQUFxQixPQUFPTCxJQUFJTSxJQUFKLENBQVMsbUJBQVQsQ0FBUCxDQUFyQixLQUNLLElBQUlQLElBQUlLLElBQUosQ0FBU0MsS0FBVCxLQUFtQkUsUUFBUUMsR0FBUixDQUFZQyxXQUFuQyxFQUFnRCxPQUFPVCxJQUFJTSxJQUFKLENBQVMsd0JBQVQsQ0FBUDtBQUNyRE4sTUFBSVUsTUFBSixDQUFXLEdBQVgsRUFBZ0JKLElBQWhCOztBQUVBLFFBQU1LLFNBQVNaLElBQUlLLElBQUosQ0FBU1EsT0FBeEI7QUFDQWIsTUFBSWMsSUFBSixHQUFXLEVBQVg7O0FBRUEsUUFBTUMsU0FBU2YsSUFBSUssSUFBSixDQUFTVyxPQUF4QjtBQUNBLE1BQUlELE1BQUosRUFBWTtBQUNWWixZQUFRQyxHQUFSLENBQVksc0JBQVo7QUFDQSxVQUFNYSxjQUFlLDhFQUE2RVQsUUFBUUMsR0FBUixDQUFZUyxRQUM3RyxtQkFBa0JILE9BQU9JLFdBQVAsRUFBcUIsRUFEeEM7O0FBR0F0QixTQUFLdUIsT0FBTCxDQUFhLEVBQUVDLE9BQU8sRUFBRU4sTUFBRixFQUFULEVBQWIsRUFDR08sSUFESCxDQUNTUixJQUFELElBQVU7QUFDZCxVQUFJLENBQUNBLElBQUwsRUFBVztBQUNUWCxnQkFBUUMsR0FBUixDQUFZLDBCQUFaO0FBQ0EsZUFBTywrQkFBWSxFQUFFbUIsYUFBYXZCLElBQUlLLElBQUosQ0FBU21CLFlBQXhCLEVBQXNDQyxTQUFTUixXQUEvQyxFQUFaLENBQVA7QUFDRDtBQUNEZCxjQUFRQyxHQUFSLENBQVksbUJBQVo7QUFDQSxVQUFJVSxLQUFLWSxVQUFULEVBQXFCO0FBQ25CdkIsZ0JBQVFDLEdBQVIsQ0FBWSwyQkFBWjtBQUNBLDBDQUFlVSxLQUFLWSxVQUFwQixFQUNHSixJQURILENBQ1NLLElBQUQsSUFBVTtBQUNkLGNBQUlBLEtBQUtDLEVBQVQsRUFBYTtBQUNYekIsb0JBQVFDLEdBQVIsQ0FBWSx1QkFBWjtBQUNBSixnQkFBSWMsSUFBSixHQUFXLEVBQUVSLE9BQU9RLEtBQUtZLFVBQWQsRUFBWDtBQUNBeEI7QUFDRCxXQUpELE1BSU87QUFDTEMsb0JBQVFDLEdBQVIsQ0FBWSx3QkFBWjtBQUNBLG1CQUFPLCtCQUFZLEVBQUVtQixhQUFhdkIsSUFBSUssSUFBSixDQUFTbUIsWUFBeEIsRUFBc0NDLFNBQVNSLFdBQS9DLEVBQVosQ0FBUDtBQUNEO0FBQ0YsU0FWSCxFQVdHWSxLQVhILENBV1VDLEtBQUQsSUFBVztBQUNoQjNCLGtCQUFRQyxHQUFSLENBQVkwQixLQUFaO0FBQ0QsU0FiSDtBQWNELE9BaEJELE1BZ0JPO0FBQ0wzQixnQkFBUUMsR0FBUixDQUFZLG1CQUFaO0FBQ0EsZUFBTywrQkFBWSxFQUFFbUIsYUFBYXZCLElBQUlLLElBQUosQ0FBU21CLFlBQXhCLEVBQXNDQyxTQUFTUixXQUEvQyxFQUFaLENBQVA7QUFDRDtBQUNGLEtBM0JIO0FBNEJEO0FBQ0YsQ0E1Q0Q7a0JBNkNlbEIsUyIsImZpbGUiOiJzbGFja0F1dGguanMiLCJzb3VyY2VSb290IjoiL2FwcC9zZXJ2ZXIvbWlkZGxld2FyZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVc2VyIGZyb20gJy4uL21vZGVscy91c2VyJztcbmltcG9ydCB7IHRlc3RTbGFja1Rva2VuLCBzZW5kTWVzc2FnZSB9IGZyb20gJy4uL2hlbHBlcnMvc2xhY2tIZWxwZXJzJztcbmltcG9ydCBkYiBmcm9tICcuLi9tb2RlbHMvJztcblxuY29uc3QgVGVhbSA9IGRiLlRlYW07XG5cbmNvbnN0IHNsYWNrQXV0aCA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zb2xlLmxvZygnd2UgYXJlIGhhbmRsaW5nIGF1dGhlbnRpY2F0aW9uJyk7XG4gIGlmICghcmVxLmJvZHkudG9rZW4pIHJldHVybiByZXMuc2VuZCgnTm8gdG9rZW4gcHJvdmlkZWQnKTtcbiAgZWxzZSBpZiAocmVxLmJvZHkudG9rZW4gIT09IHByb2Nlc3MuZW52LlNMQUNLX1RPS0VOKSByZXR1cm4gcmVzLnNlbmQoJ0ludmFsaWQgdG9rZW4gcHJvdmlkZWQnKTtcbiAgcmVzLnN0YXR1cygyMDApLnNlbmQoKTtcblxuICBjb25zdCB1c2VySWQgPSByZXEuYm9keS51c2VyX2lkO1xuICByZXEudGVhbSA9IHt9O1xuXG4gIGNvbnN0IHRlYW1JZCA9IHJlcS5ib2R5LnRlYW1faWQ7XG4gIGlmICh0ZWFtSWQpIHtcbiAgICBjb25zb2xlLmxvZygnd2UgZm91bmQgdGhlIHRlYW0gaWQnKTtcbiAgICBjb25zdCBhdXRoTWVzc2FnZSA9IGBJdCBzZWVtcyBsaWtlICpsb2NrZXIqIGhhcyBub3QgYmVlbiBhZGRlZCB0byB5b3VyIHdvcmtzcGFjZSwgcGxlYXNlIGdvdCB0byAke3Byb2Nlc3MuZW52LkJBU0VfVVJJXG4gICAgfXNsYWNrL2F1dGhvcmlzZS8ke3RlYW1JZC50b0xvd2VyQ2FzZSgpfWA7XG5cbiAgICBUZWFtLmZpbmRPbmUoeyB3aGVyZTogeyB0ZWFtSWQgfSB9KVxuICAgICAgLnRoZW4oKHRlYW0pID0+IHtcbiAgICAgICAgaWYgKCF0ZWFtKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3dlIGRpZCBub3QgZmluZCB0aGUgdGVhbScpO1xuICAgICAgICAgIHJldHVybiBzZW5kTWVzc2FnZSh7IHJlc3BvbnNlVXJsOiByZXEuYm9keS5yZXNwb25zZV91cmwsIG1lc3NhZ2U6IGF1dGhNZXNzYWdlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKCd3ZSBmb3VuZCB0aGUgdGVhbScpO1xuICAgICAgICBpZiAodGVhbS5zbGFja1Rva2VuKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3dlIGZvdW5kIHRlYW0gc2xhY2sgdG9rZW4nKTtcbiAgICAgICAgICB0ZXN0U2xhY2tUb2tlbih0ZWFtLnNsYWNrVG9rZW4pXG4gICAgICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICBpZiAoZGF0YS5vaykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0aGUgdG9rZW4gdGVzdCBwYXNzZWQnKTtcbiAgICAgICAgICAgICAgICByZXEudGVhbSA9IHsgdG9rZW46IHRlYW0uc2xhY2tUb2tlbiB9O1xuICAgICAgICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndGhldCB0b2tlbiB0ZXN0IGZhaWxlZCcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBzZW5kTWVzc2FnZSh7IHJlc3BvbnNlVXJsOiByZXEuYm9keS5yZXNwb25zZV91cmwsIG1lc3NhZ2U6IGF1dGhNZXNzYWdlIH0pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygndGhlcmUgd2FzIHRlYW0gaWQnKTtcbiAgICAgICAgICByZXR1cm4gc2VuZE1lc3NhZ2UoeyByZXNwb25zZVVybDogcmVxLmJvZHkucmVzcG9uc2VfdXJsLCBtZXNzYWdlOiBhdXRoTWVzc2FnZSB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cbn07XG5leHBvcnQgZGVmYXVsdCBzbGFja0F1dGg7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "slackAuth.js"
      ],
      "names": [
        "Team",
        "db",
        "slackAuth",
        "req",
        "res",
        "next",
        "console",
        "log",
        "body",
        "token",
        "send",
        "process",
        "env",
        "SLACK_TOKEN",
        "status",
        "userId",
        "user_id",
        "team",
        "teamId",
        "team_id",
        "authMessage",
        "BASE_URI",
        "toLowerCase",
        "findOne",
        "where",
        "then",
        "responseUrl",
        "response_url",
        "message",
        "slackToken",
        "data",
        "ok",
        "catch",
        "error"
      ],
      "mappings": ";;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,MAAMA,OAAOC,iBAAGD,IAAhB;;AAEA,MAAME,YAAY,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACpCC,UAAQC,GAAR,CAAY,gCAAZ;AACA,MAAI,CAACJ,IAAIK,IAAJ,CAASC,KAAd,EAAqB,OAAOL,IAAIM,IAAJ,CAAS,mBAAT,CAAP,CAArB,KACK,IAAIP,IAAIK,IAAJ,CAASC,KAAT,KAAmBE,QAAQC,GAAR,CAAYC,WAAnC,EAAgD,OAAOT,IAAIM,IAAJ,CAAS,wBAAT,CAAP;AACrDN,MAAIU,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB;;AAEA,QAAMK,SAASZ,IAAIK,IAAJ,CAASQ,OAAxB;AACAb,MAAIc,IAAJ,GAAW,EAAX;;AAEA,QAAMC,SAASf,IAAIK,IAAJ,CAASW,OAAxB;AACA,MAAID,MAAJ,EAAY;AACVZ,YAAQC,GAAR,CAAY,sBAAZ;AACA,UAAMa,cAAe,8EAA6ET,QAAQC,GAAR,CAAYS,QAC7G,mBAAkBH,OAAOI,WAAP,EAAqB,EADxC;;AAGAtB,SAAKuB,OAAL,CAAa,EAAEC,OAAO,EAAEN,MAAF,EAAT,EAAb,EACGO,IADH,CACSR,IAAD,IAAU;AACd,UAAI,CAACA,IAAL,EAAW;AACTX,gBAAQC,GAAR,CAAY,0BAAZ;AACA,eAAO,+BAAY,EAAEmB,aAAavB,IAAIK,IAAJ,CAASmB,YAAxB,EAAsCC,SAASR,WAA/C,EAAZ,CAAP;AACD;AACDd,cAAQC,GAAR,CAAY,mBAAZ;AACA,UAAIU,KAAKY,UAAT,EAAqB;AACnBvB,gBAAQC,GAAR,CAAY,2BAAZ;AACA,0CAAeU,KAAKY,UAApB,EACGJ,IADH,CACSK,IAAD,IAAU;AACd,cAAIA,KAAKC,EAAT,EAAa;AACXzB,oBAAQC,GAAR,CAAY,uBAAZ;AACAJ,gBAAIc,IAAJ,GAAW,EAAER,OAAOQ,KAAKY,UAAd,EAAX;AACAxB;AACD,WAJD,MAIO;AACLC,oBAAQC,GAAR,CAAY,wBAAZ;AACA,mBAAO,+BAAY,EAAEmB,aAAavB,IAAIK,IAAJ,CAASmB,YAAxB,EAAsCC,SAASR,WAA/C,EAAZ,CAAP;AACD;AACF,SAVH,EAWGY,KAXH,CAWUC,KAAD,IAAW;AAChB3B,kBAAQC,GAAR,CAAY0B,KAAZ;AACD,SAbH;AAcD,OAhBD,MAgBO;AACL3B,gBAAQC,GAAR,CAAY,mBAAZ;AACA,eAAO,+BAAY,EAAEmB,aAAavB,IAAIK,IAAJ,CAASmB,YAAxB,EAAsCC,SAASR,WAA/C,EAAZ,CAAP;AACD;AACF,KA3BH;AA4BD;AACF,CA5CD;kBA6CelB,S",
      "file": "slackAuth.js",
      "sourceRoot": "/app/server/middleware",
      "sourcesContent": [
        "import User from '../models/user';\nimport { testSlackToken, sendMessage } from '../helpers/slackHelpers';\nimport db from '../models/';\n\nconst Team = db.Team;\n\nconst slackAuth = (req, res, next) => {\n  console.log('we are handling authentication');\n  if (!req.body.token) return res.send('No token provided');\n  else if (req.body.token !== process.env.SLACK_TOKEN) return res.send('Invalid token provided');\n  res.status(200).send();\n\n  const userId = req.body.user_id;\n  req.team = {};\n\n  const teamId = req.body.team_id;\n  if (teamId) {\n    console.log('we found the team id');\n    const authMessage = `It seems like *locker* has not been added to your workspace, please got to ${process.env.BASE_URI\n    }slack/authorise/${teamId.toLowerCase()}`;\n\n    Team.findOne({ where: { teamId } })\n      .then((team) => {\n        if (!team) {\n          console.log('we did not find the team');\n          return sendMessage({ responseUrl: req.body.response_url, message: authMessage });\n        }\n        console.log('we found the team');\n        if (team.slackToken) {\n          console.log('we found team slack token');\n          testSlackToken(team.slackToken)\n            .then((data) => {\n              if (data.ok) {\n                console.log('the token test passed');\n                req.team = { token: team.slackToken };\n                next();\n              } else {\n                console.log('thet token test failed');\n                return sendMessage({ responseUrl: req.body.response_url, message: authMessage });\n              }\n            })\n            .catch((error) => {\n              console.log(error);\n            });\n        } else {\n          console.log('there was team id');\n          return sendMessage({ responseUrl: req.body.response_url, message: authMessage });\n        }\n      });\n  }\n};\nexport default slackAuth;\n"
      ]
    },
    "mtime": 1525874219635
  },
  "{\"filename\":\"/app/server/middleware/validateSubmission.js\",\"env\":{},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],{\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server/middleware\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.3": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/middleware/validateSubmission.js",
      "filenameRelative": "/app/server/middleware/validateSubmission.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "validateSubmission.js",
      "sourceFileName": "validateSubmission.js",
      "sourceRoot": "/app/server/middleware",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server/middleware",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "validateSubmission"
    },
    "ignored": false,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst validateSubmission = (req, res, next) => {\n  const requestObject = JSON.parse(req.body.payload);\n\n  req.body.token = requestObject.token;\n  req.body.user_id = requestObject.user.id;\n  req.requestObject = requestObject;\n  req.body.team_id = requestObject.team.id;\n\n  if (requestObject.callback_id != 'locker_selection') {\n    return res.status(400).send({ text: \"Something went wrong, try again\" });\n  }\n  next();\n};\n\nexports.default = validateSubmission;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbGlkYXRlU3VibWlzc2lvbi5qcyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZVN1Ym1pc3Npb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVxdWVzdE9iamVjdCIsIkpTT04iLCJwYXJzZSIsImJvZHkiLCJwYXlsb2FkIiwidG9rZW4iLCJ1c2VyX2lkIiwidXNlciIsImlkIiwidGVhbV9pZCIsInRlYW0iLCJjYWxsYmFja19pZCIsInN0YXR1cyIsInNlbmQiLCJ0ZXh0Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE1BQU1BLHFCQUFxQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QyxRQUFNQyxnQkFBZ0JDLEtBQUtDLEtBQUwsQ0FBV0wsSUFBSU0sSUFBSixDQUFTQyxPQUFwQixDQUF0Qjs7QUFFQVAsTUFBSU0sSUFBSixDQUFTRSxLQUFULEdBQWlCTCxjQUFjSyxLQUEvQjtBQUNBUixNQUFJTSxJQUFKLENBQVNHLE9BQVQsR0FBbUJOLGNBQWNPLElBQWQsQ0FBbUJDLEVBQXRDO0FBQ0FYLE1BQUlHLGFBQUosR0FBb0JBLGFBQXBCO0FBQ0FILE1BQUlNLElBQUosQ0FBU00sT0FBVCxHQUFtQlQsY0FBY1UsSUFBZCxDQUFtQkYsRUFBdEM7O0FBRUEsTUFBSVIsY0FBY1csV0FBZCxJQUE2QixrQkFBakMsRUFBb0Q7QUFDbEQsV0FBT2IsSUFBSWMsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLEVBQUVDLE1BQU0saUNBQVIsRUFBckIsQ0FBUDtBQUNEO0FBQ0RmO0FBQ0QsQ0FaRDs7a0JBY2VILGtCIiwiZmlsZSI6InZhbGlkYXRlU3VibWlzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIvYXBwL3NlcnZlci9taWRkbGV3YXJlIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdmFsaWRhdGVTdWJtaXNzaW9uID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGNvbnN0IHJlcXVlc3RPYmplY3QgPSBKU09OLnBhcnNlKHJlcS5ib2R5LnBheWxvYWQpO1xuXG4gIHJlcS5ib2R5LnRva2VuID0gcmVxdWVzdE9iamVjdC50b2tlbjtcbiAgcmVxLmJvZHkudXNlcl9pZCA9IHJlcXVlc3RPYmplY3QudXNlci5pZDtcbiAgcmVxLnJlcXVlc3RPYmplY3QgPSByZXF1ZXN0T2JqZWN0O1xuICByZXEuYm9keS50ZWFtX2lkID0gcmVxdWVzdE9iamVjdC50ZWFtLmlkO1xuXG4gIGlmIChyZXF1ZXN0T2JqZWN0LmNhbGxiYWNrX2lkICE9ICdsb2NrZXJfc2VsZWN0aW9uJyl7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5zZW5kKHsgdGV4dDogXCJTb21ldGhpbmcgd2VudCB3cm9uZywgdHJ5IGFnYWluXCIgfSk7XG4gIH1cbiAgbmV4dCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZVN1Ym1pc3Npb247XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "validateSubmission.js"
      ],
      "names": [
        "validateSubmission",
        "req",
        "res",
        "next",
        "requestObject",
        "JSON",
        "parse",
        "body",
        "payload",
        "token",
        "user_id",
        "user",
        "id",
        "team_id",
        "team",
        "callback_id",
        "status",
        "send",
        "text"
      ],
      "mappings": ";;;;;AAAA,MAAMA,qBAAqB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7C,QAAMC,gBAAgBC,KAAKC,KAAL,CAAWL,IAAIM,IAAJ,CAASC,OAApB,CAAtB;;AAEAP,MAAIM,IAAJ,CAASE,KAAT,GAAiBL,cAAcK,KAA/B;AACAR,MAAIM,IAAJ,CAASG,OAAT,GAAmBN,cAAcO,IAAd,CAAmBC,EAAtC;AACAX,MAAIG,aAAJ,GAAoBA,aAApB;AACAH,MAAIM,IAAJ,CAASM,OAAT,GAAmBT,cAAcU,IAAd,CAAmBF,EAAtC;;AAEA,MAAIR,cAAcW,WAAd,IAA6B,kBAAjC,EAAoD;AAClD,WAAOb,IAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,MAAM,iCAAR,EAArB,CAAP;AACD;AACDf;AACD,CAZD;;kBAceH,kB",
      "file": "validateSubmission.js",
      "sourceRoot": "/app/server/middleware",
      "sourcesContent": [
        "const validateSubmission = (req, res, next) => {\n  const requestObject = JSON.parse(req.body.payload);\n\n  req.body.token = requestObject.token;\n  req.body.user_id = requestObject.user.id;\n  req.requestObject = requestObject;\n  req.body.team_id = requestObject.team.id;\n\n  if (requestObject.callback_id != 'locker_selection'){\n    return res.status(400).send({ text: \"Something went wrong, try again\" });\n  }\n  next();\n}\n\nexport default validateSubmission;\n"
      ]
    },
    "mtime": 1525873946714
  }
}